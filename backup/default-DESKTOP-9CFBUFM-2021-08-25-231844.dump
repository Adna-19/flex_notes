CREATE TABLE IF NOT EXISTS "account_emailaddress" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "email" varchar(254) NOT NULL UNIQUE, "verified" bool NOT NULL, "primary" bool NOT NULL, "user_id" bigint NOT NULL REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "account_emailconfirmation" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "created" datetime NOT NULL, "sent" datetime NULL, "key" varchar(64) NOT NULL UNIQUE, "email_address_id" bigint NOT NULL REFERENCES "account_emailaddress" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "accounts_account" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "first_name" varchar(150) NOT NULL, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "gender" varchar(7) NOT NULL, "profile_img" varchar(100) NOT NULL);
INSERT INTO "accounts_account" VALUES(1,'pbkdf2_sha256$260000$a1SID4Iq37jGh0ASGO1zCh$nkY47rt0aaHwym1IIGjuOr7nHJaOmRq7AE2enuHTxnA=','2021-08-25 16:12:56.795704',1,'namra','Namrah','Raheem','nimra.rahim99@gmail.com',1,1,'2021-06-03 05:21:45','female','profile_images/images.jpg');
INSERT INTO "accounts_account" VALUES(2,'pbkdf2_sha256$260000$XTcebWrBpKQJ66OfZ8vVq5$usqlN4KIe0dUFEt9Xl2ZB/0rqyvw2YuvriddmulqV5A=','2021-08-25 04:47:37.629327',0,'iqra','Iqra','Saleem','iqra@gmail.com',0,1,'2021-06-06 13:06:58','female','profile_images/3_PUDtzJx.jpg');
INSERT INTO "accounts_account" VALUES(3,'!n8uMEbBbIBqPQtqB3tAPn0fHDUoB6cLV04ngNOd6','2021-08-11 05:01:46',0,'namrah','Namrah','Raheem','nimra.rahim@gmail.com',0,1,'2021-06-08 04:29:38','female','profile_images/tertiary.jpeg');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "accounts_account_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "account_id" bigint NOT NULL REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "accounts_account_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "account_id" bigint NOT NULL REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
INSERT INTO "auth_permission" VALUES(1,1,'add_account','Can add user');
INSERT INTO "auth_permission" VALUES(2,1,'change_account','Can change user');
INSERT INTO "auth_permission" VALUES(3,1,'delete_account','Can delete user');
INSERT INTO "auth_permission" VALUES(4,1,'view_account','Can view user');
INSERT INTO "auth_permission" VALUES(5,2,'add_logentry','Can add log entry');
INSERT INTO "auth_permission" VALUES(6,2,'change_logentry','Can change log entry');
INSERT INTO "auth_permission" VALUES(7,2,'delete_logentry','Can delete log entry');
INSERT INTO "auth_permission" VALUES(8,2,'view_logentry','Can view log entry');
INSERT INTO "auth_permission" VALUES(9,3,'add_permission','Can add permission');
INSERT INTO "auth_permission" VALUES(10,3,'change_permission','Can change permission');
INSERT INTO "auth_permission" VALUES(11,3,'delete_permission','Can delete permission');
INSERT INTO "auth_permission" VALUES(12,3,'view_permission','Can view permission');
INSERT INTO "auth_permission" VALUES(13,4,'add_group','Can add group');
INSERT INTO "auth_permission" VALUES(14,4,'change_group','Can change group');
INSERT INTO "auth_permission" VALUES(15,4,'delete_group','Can delete group');
INSERT INTO "auth_permission" VALUES(16,4,'view_group','Can view group');
INSERT INTO "auth_permission" VALUES(17,5,'add_contenttype','Can add content type');
INSERT INTO "auth_permission" VALUES(18,5,'change_contenttype','Can change content type');
INSERT INTO "auth_permission" VALUES(19,5,'delete_contenttype','Can delete content type');
INSERT INTO "auth_permission" VALUES(20,5,'view_contenttype','Can view content type');
INSERT INTO "auth_permission" VALUES(21,6,'add_session','Can add session');
INSERT INTO "auth_permission" VALUES(22,6,'change_session','Can change session');
INSERT INTO "auth_permission" VALUES(23,6,'delete_session','Can delete session');
INSERT INTO "auth_permission" VALUES(24,6,'view_session','Can view session');
INSERT INTO "auth_permission" VALUES(25,7,'add_site','Can add site');
INSERT INTO "auth_permission" VALUES(26,7,'change_site','Can change site');
INSERT INTO "auth_permission" VALUES(27,7,'delete_site','Can delete site');
INSERT INTO "auth_permission" VALUES(28,7,'view_site','Can view site');
INSERT INTO "auth_permission" VALUES(29,8,'add_emailaddress','Can add email address');
INSERT INTO "auth_permission" VALUES(30,8,'change_emailaddress','Can change email address');
INSERT INTO "auth_permission" VALUES(31,8,'delete_emailaddress','Can delete email address');
INSERT INTO "auth_permission" VALUES(32,8,'view_emailaddress','Can view email address');
INSERT INTO "auth_permission" VALUES(33,9,'add_emailconfirmation','Can add email confirmation');
INSERT INTO "auth_permission" VALUES(34,9,'change_emailconfirmation','Can change email confirmation');
INSERT INTO "auth_permission" VALUES(35,9,'delete_emailconfirmation','Can delete email confirmation');
INSERT INTO "auth_permission" VALUES(36,9,'view_emailconfirmation','Can view email confirmation');
INSERT INTO "auth_permission" VALUES(37,10,'add_socialaccount','Can add social account');
INSERT INTO "auth_permission" VALUES(38,10,'change_socialaccount','Can change social account');
INSERT INTO "auth_permission" VALUES(39,10,'delete_socialaccount','Can delete social account');
INSERT INTO "auth_permission" VALUES(40,10,'view_socialaccount','Can view social account');
INSERT INTO "auth_permission" VALUES(41,11,'add_socialapp','Can add social application');
INSERT INTO "auth_permission" VALUES(42,11,'change_socialapp','Can change social application');
INSERT INTO "auth_permission" VALUES(43,11,'delete_socialapp','Can delete social application');
INSERT INTO "auth_permission" VALUES(44,11,'view_socialapp','Can view social application');
INSERT INTO "auth_permission" VALUES(45,12,'add_socialtoken','Can add social application token');
INSERT INTO "auth_permission" VALUES(46,12,'change_socialtoken','Can change social application token');
INSERT INTO "auth_permission" VALUES(47,12,'delete_socialtoken','Can delete social application token');
INSERT INTO "auth_permission" VALUES(48,12,'view_socialtoken','Can view social application token');
INSERT INTO "auth_permission" VALUES(49,13,'add_blanknote','Can add blank note');
INSERT INTO "auth_permission" VALUES(50,13,'change_blanknote','Can change blank note');
INSERT INTO "auth_permission" VALUES(51,13,'delete_blanknote','Can delete blank note');
INSERT INTO "auth_permission" VALUES(52,13,'view_blanknote','Can view blank note');
INSERT INTO "auth_permission" VALUES(53,14,'add_essayoutline','Can add essay outline');
INSERT INTO "auth_permission" VALUES(54,14,'change_essayoutline','Can change essay outline');
INSERT INTO "auth_permission" VALUES(55,14,'delete_essayoutline','Can delete essay outline');
INSERT INTO "auth_permission" VALUES(56,14,'view_essayoutline','Can view essay outline');
INSERT INTO "auth_permission" VALUES(57,15,'add_lecturenote','Can add lecture note');
INSERT INTO "auth_permission" VALUES(58,15,'change_lecturenote','Can change lecture note');
INSERT INTO "auth_permission" VALUES(59,15,'delete_lecturenote','Can delete lecture note');
INSERT INTO "auth_permission" VALUES(60,15,'view_lecturenote','Can view lecture note');
INSERT INTO "auth_permission" VALUES(61,16,'add_meetingnote','Can add meeting note');
INSERT INTO "auth_permission" VALUES(62,16,'change_meetingnote','Can change meeting note');
INSERT INTO "auth_permission" VALUES(63,16,'delete_meetingnote','Can delete meeting note');
INSERT INTO "auth_permission" VALUES(64,16,'view_meetingnote','Can view meeting note');
INSERT INTO "auth_permission" VALUES(65,17,'add_projectplan','Can add project plan');
INSERT INTO "auth_permission" VALUES(66,17,'change_projectplan','Can change project plan');
INSERT INTO "auth_permission" VALUES(67,17,'delete_projectplan','Can delete project plan');
INSERT INTO "auth_permission" VALUES(68,17,'view_projectplan','Can view project plan');
INSERT INTO "auth_permission" VALUES(69,18,'add_todoitem','Can add todo item');
INSERT INTO "auth_permission" VALUES(70,18,'change_todoitem','Can change todo item');
INSERT INTO "auth_permission" VALUES(71,18,'delete_todoitem','Can delete todo item');
INSERT INTO "auth_permission" VALUES(72,18,'view_todoitem','Can view todo item');
INSERT INTO "auth_permission" VALUES(73,19,'add_todonote','Can add todo note');
INSERT INTO "auth_permission" VALUES(74,19,'change_todonote','Can change todo note');
INSERT INTO "auth_permission" VALUES(75,19,'delete_todonote','Can delete todo note');
INSERT INTO "auth_permission" VALUES(76,19,'view_todonote','Can view todo note');
INSERT INTO "auth_permission" VALUES(77,20,'add_notebook','Can add note book');
INSERT INTO "auth_permission" VALUES(78,20,'change_notebook','Can change note book');
INSERT INTO "auth_permission" VALUES(79,20,'delete_notebook','Can delete note book');
INSERT INTO "auth_permission" VALUES(80,20,'view_notebook','Can view note book');
INSERT INTO "auth_permission" VALUES(81,21,'add_notetype','Can add note type');
INSERT INTO "auth_permission" VALUES(82,21,'change_notetype','Can change note type');
INSERT INTO "auth_permission" VALUES(83,21,'delete_notetype','Can delete note type');
INSERT INTO "auth_permission" VALUES(84,21,'view_notetype','Can view note type');
INSERT INTO "auth_permission" VALUES(85,22,'add_note','Can add note');
INSERT INTO "auth_permission" VALUES(86,22,'change_note','Can change note');
INSERT INTO "auth_permission" VALUES(87,22,'delete_note','Can delete note');
INSERT INTO "auth_permission" VALUES(88,22,'view_note','Can view note');
INSERT INTO "auth_permission" VALUES(89,23,'add_daymeal','Can add day meal');
INSERT INTO "auth_permission" VALUES(90,23,'change_daymeal','Can change day meal');
INSERT INTO "auth_permission" VALUES(91,23,'delete_daymeal','Can delete day meal');
INSERT INTO "auth_permission" VALUES(92,23,'view_daymeal','Can view day meal');
INSERT INTO "auth_permission" VALUES(93,24,'add_mealplanner','Can add meal planner');
INSERT INTO "auth_permission" VALUES(94,24,'change_mealplanner','Can change meal planner');
INSERT INTO "auth_permission" VALUES(95,24,'delete_mealplanner','Can delete meal planner');
INSERT INTO "auth_permission" VALUES(96,24,'view_mealplanner','Can view meal planner');
INSERT INTO "auth_permission" VALUES(97,25,'add_trash','Can add trash');
INSERT INTO "auth_permission" VALUES(98,25,'change_trash','Can change trash');
INSERT INTO "auth_permission" VALUES(99,25,'delete_trash','Can delete trash');
INSERT INTO "auth_permission" VALUES(100,25,'view_trash','Can view trash');
INSERT INTO "auth_permission" VALUES(101,26,'add_stickynote','Can add sticky note');
INSERT INTO "auth_permission" VALUES(102,26,'change_stickynote','Can change sticky note');
INSERT INTO "auth_permission" VALUES(103,26,'delete_stickynote','Can delete sticky note');
INSERT INTO "auth_permission" VALUES(104,26,'view_stickynote','Can view sticky note');
INSERT INTO "auth_permission" VALUES(105,27,'add_cronjoblog','Can add cron job log');
INSERT INTO "auth_permission" VALUES(106,27,'change_cronjoblog','Can change cron job log');
INSERT INTO "auth_permission" VALUES(107,27,'delete_cronjoblog','Can delete cron job log');
INSERT INTO "auth_permission" VALUES(108,27,'view_cronjoblog','Can view cron job log');
INSERT INTO "auth_permission" VALUES(109,28,'add_diary','Can add diary');
INSERT INTO "auth_permission" VALUES(110,28,'change_diary','Can change diary');
INSERT INTO "auth_permission" VALUES(111,28,'delete_diary','Can delete diary');
INSERT INTO "auth_permission" VALUES(112,28,'view_diary','Can view diary');
INSERT INTO "auth_permission" VALUES(113,29,'add_diarypage','Can add diary page');
INSERT INTO "auth_permission" VALUES(114,29,'change_diarypage','Can change diary page');
INSERT INTO "auth_permission" VALUES(115,29,'delete_diarypage','Can delete diary page');
INSERT INTO "auth_permission" VALUES(116,29,'view_diarypage','Can view diary page');
INSERT INTO "auth_permission" VALUES(117,30,'add_category','Can add category');
INSERT INTO "auth_permission" VALUES(118,30,'change_category','Can change category');
INSERT INTO "auth_permission" VALUES(119,30,'delete_category','Can delete category');
INSERT INTO "auth_permission" VALUES(120,30,'view_category','Can view category');
INSERT INTO "auth_permission" VALUES(121,31,'add_post','Can add post');
INSERT INTO "auth_permission" VALUES(122,31,'change_post','Can change post');
INSERT INTO "auth_permission" VALUES(123,31,'delete_post','Can delete post');
INSERT INTO "auth_permission" VALUES(124,31,'view_post','Can view post');
INSERT INTO "auth_permission" VALUES(125,32,'add_tag','Can add tag');
INSERT INTO "auth_permission" VALUES(126,32,'change_tag','Can change tag');
INSERT INTO "auth_permission" VALUES(127,32,'delete_tag','Can delete tag');
INSERT INTO "auth_permission" VALUES(128,32,'view_tag','Can view tag');
INSERT INTO "auth_permission" VALUES(129,33,'add_taggeditem','Can add tagged item');
INSERT INTO "auth_permission" VALUES(130,33,'change_taggeditem','Can change tagged item');
INSERT INTO "auth_permission" VALUES(131,33,'delete_taggeditem','Can delete tagged item');
INSERT INTO "auth_permission" VALUES(132,33,'view_taggeditem','Can view tagged item');
INSERT INTO "auth_permission" VALUES(133,34,'add_sharednote','Can add shared note');
INSERT INTO "auth_permission" VALUES(134,34,'change_sharednote','Can change shared note');
INSERT INTO "auth_permission" VALUES(135,34,'delete_sharednote','Can delete shared note');
INSERT INTO "auth_permission" VALUES(136,34,'view_sharednote','Can view shared note');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "blog_category" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "slug" varchar(200) NULL UNIQUE);
INSERT INTO "blog_category" VALUES(4,'Books','books-2021-08-14-0639479604270000');
INSERT INTO "blog_category" VALUES(5,'Flexnote News','flexnote-news-2021-08-14-1849309631640000');
INSERT INTO "blog_category" VALUES(6,'Using Flexnote','using-flexnote-2021-08-14-1850299089870000');
INSERT INTO "blog_category" VALUES(7,'Flexnote Tech','flexnote-tech-2021-08-14-1850529724530000');
INSERT INTO "blog_category" VALUES(8,'Everything','everything-2021-08-14-1851052053860000');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "blog_post" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(255) NULL, "image" varchar(100) NOT NULL, "slug" varchar(200) NULL UNIQUE, "content" text NOT NULL, "summary" text NOT NULL, "status" varchar(10) NOT NULL, "trashed" bool NOT NULL, "date_created" date NOT NULL, "date_updated" date NOT NULL, "date_published" date NOT NULL, "author_id" bigint NULL REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED, "category_id" bigint NOT NULL REFERENCES "blog_category" ("id") DEFERRABLE INITIALLY DEFERRED, "claps" integer unsigned NULL CHECK ("claps" >= 0));
INSERT INTO "blog_post" VALUES(1,'How to read a book in a week','media/blog/posts/images/developer.jpg_034oSvK.jpg','how-to-read-a-book-in-a-week-2021-08-24-1650279616840000','<p>If you upload large numbers of files regularly&mdash;such as photos, PDFs, or other key documents&mdash;Import Folders is a total time saver. You can tell Flexnote&nbsp;to monitor a folder on your desktop, and whenever you place a file in that folder, Flexnote&nbsp;will automatically import it into the notebook of your choice.&nbsp;</p>

<p>This might sound familiar to existing Windows customers&mdash;in fact, it&rsquo;s one of the most-requested features from Evernote Legacy. So we&rsquo;re thrilled to bring it back for the new Evernote for Windows&mdash;<strong><em>and&nbsp;</em></strong>introduce it to our Mac customers!</p>

<p>Import Folders is now available for customers on Flexnote&nbsp;10.16 for Mac and Windows. To find out what version of Flexnote&nbsp;you currently have installed, check out&nbsp;<a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/360053951413-Locate-app-version" rel="noreferrer noopener" target="_blank">this article on locating your app version</a>.</p>

<p><img alt="" src="/media/uploads/namra/2021/08/14/couple_hands_tenderness_118110_1280x720.jpg" style="width: 650px; height: 366px;" /></p>','If you upload large numbers of files regularly—such as photos, PDFs, or other key documents—Import Folders is a total time saver. You can tell Flexnote to monitor a folder on your desktop, and whenever you place a file in that folder, Flexnote will automatically import it into the notebook of your choice. 
If you upload large numbers of files regularly—such as photos, PDFs, or other key documents—Import Folders is a total time saver. You can tell Flexnote to monitor a folder on your desktop, and whenever you place a file in that folder, Flexnote will automatically import it into the notebook of your choice. 

This might sound familiar to existing Windows customers—in fact, it’s one of the most-requested features from Flexnote Legacy. So we’re thrilled to bring it back for the new Flexnote for Windows—and introduce it to our Mac customers!

Import Folders is now available for customers on Flexnote 10.16 for Mac and Windows. To find out what version of Flexnote you currently have installed, check out this article on locating your app version.','published',0,'2021-08-14','2021-08-24','2021-08-14',1,4,3);
INSERT INTO "blog_post" VALUES(3,'Best books for making good habits','media/blog/posts/images/book_ring_heart_love_118982_1280x720.jpg','best-books-for-making-good-habits-2021-08-24-1651544377600000','<p>If you upload large numbers of files regularly&mdash;such as photos, PDFs, or other key documents&mdash;Import Folders is a total time saver. You can tell Flexnote&nbsp; to monitor a folder on your desktop, and whenever you place a file in that folder, Flexnote&nbsp;will automatically import it into the notebook of your choice.&nbsp;</p>

<p>This might sound familiar to existing Windows customers&mdash;in fact, it&rsquo;s one of the most-requested features from Flexnote&nbsp;Legacy. So we&rsquo;re thrilled to bring it back for the new Flexnote&nbsp;for Windows&mdash;<strong><em>and&nbsp;</em></strong>introduce it to our Mac customers!</p>

<p>Import Folders is now available for customers on Flexnote&nbsp;10.16 for Mac and Windows. To find out what version of Evernote you currently have installed, check out&nbsp;<a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/360053951413-Locate-app-version" rel="noreferrer noopener" target="_blank">this article on locating your app version</a>.</p>

<p>&nbsp;</p>

<p>If you upload large numbers of files regularly&mdash;such as photos, PDFs, or other key documents&mdash;Import Folders is a total time saver. You can tell Flexnote&nbsp;to monitor a folder on your desktop, and whenever you place a file in that folder, Evernote will automatically import it into the notebook of your choice.&nbsp;</p>

<p>This might sound familiar to existing Windows customers&mdash;in fact, it&rsquo;s one of the most-requested features from Evernote Legacy. So we&rsquo;re thrilled to bring it back for the new Flexnote&nbsp;for Windows&mdash;<strong><em>and&nbsp;</em></strong>introduce it to our Mac customers!</p>

<p>Import Folders is now available for customers on Flexnote&nbsp;10.16 for Mac and Windows. To find out what version of Flexnote&nbsp;you currently have installed, check out&nbsp;<a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/360053951413-Locate-app-version" rel="noreferrer noopener" target="_blank">this article on locating your app version</a>.</p>

<p>If you upload large numbers of files regularly&mdash;such as photos, PDFs, or other key documents&mdash;Import Folders is a total time saver. You can tell Flexnote&nbsp;to monitor a folder on your desktop, and whenever you place a file in that folder, Flexnote&nbsp;will automatically import it into the notebook of your choice.&nbsp;</p>

<p>This might sound familiar to existing Windows customers&mdash;in fact, it&rsquo;s one of the most-requested features from Evernote Legacy. So we&rsquo;re thrilled to bring it back for the new Flexnote&nbsp;for Windows&mdash;<strong><em>and&nbsp;</em></strong>introduce it to our Mac customers!</p>

<p>Import Folders is now available for customers on Flexnote&nbsp;10.16 for Mac and Windows. To find out what version of Flexnote&nbsp;you currently have installed, check out&nbsp;<a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/360053951413-Locate-app-version" rel="noreferrer noopener" target="_blank">this article on locating your app version</a>.</p>','If you upload large numbers of files regularly—such as photos, PDFs, or other key documents—Import Folders is a total time saver. You can tell Flexnote to monitor a folder on your desktop, and whenever you place a file in that folder, Flexnote will automatically import it into the notebook of your choice. 

This might sound familiar to existing Windows customers—in fact, it’s one of the most-requested features from Flexnote Legacy. So we’re thrilled to bring it back for the new Flexnote for Windows—and introduce it to our Mac customers!

Import Folders is now available for customers on Flexnote 10.16 for Mac and Windows. To find out what version of Evernote you currently have installed, check out this article on locating your app version.
If you upload large numbers of files regularly—such as photos, PDFs, or other key documents—Import Folders is a total time saver. You can tell Evernote to monitor a folder on your desktop, and whenever you place a file in that folder, Evernote will automatically import it into the notebook of your choice. 

This might sound familiar to existing Windows customers—in fact, it’s one of the most-requested features from Evernote Legacy. So we’re thrilled to bring it back for the new Evernote for Windows—and introduce it to our Mac customers!

Import Folders is now available for customers on Evernote 10.16 for Mac and Windows. To find out what version of Evernote you currently have installed, check out this article on locating your app version.','published',0,'2021-08-14','2021-08-24','2021-08-14',1,4,3);
INSERT INTO "blog_post" VALUES(4,'Save the Files You Need More Easily With Import Folders','media/blog/posts/images/en10-export-to-pdf.jpg','save-the-files-you-need-more-easily-with-import-folders-2021-08-24-1653021974890000','<p>If you upload large numbers of files regularly&mdash;such as photos, PDFs, or other key documents&mdash;Import Folders is a total time saver. You can tell Flexnote&nbsp;to monitor a folder on your desktop, and whenever you place a file in that folder, Evernote will automatically import it into the notebook of your choice.&nbsp;</p>

<p>This might sound familiar to existing Windows customers&mdash;in fact, it&rsquo;s one of the most-requested features from Flexnote&nbsp;Legacy. So we&rsquo;re thrilled to bring it back for the new Flexnote&nbsp;for Windows&mdash;<strong><em>and&nbsp;</em></strong>introduce it to our Mac customers!</p>

<p>Import Folders is now available for customers on Flexnote&nbsp;10.16 for Mac and Windows. To find out what version of Flexnote&nbsp;you currently have installed, check out&nbsp;<a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/360053951413-Locate-app-version" rel="noreferrer noopener" target="_blank">this article on locating your app version</a>.</p>

<p>&nbsp;</p>

<p><img alt="" src="/media/uploads/namra/2021/08/14/export-notes-in-macos.png" style="width: 650px; height: 415px;" /></p>','Pro Tip: Set up an import folder for each of your key workflows. For example: If you typically upload your photos to a photos notebook and work documents to a work notebook, you can create a separate import folder on your desktop for each of these file types so it’s easy to keep them all organized.

For more information on how to set up Import Folders, check out this helpful explainer video, or take a deep dive with this Help & Learning Center article. And for more details on how we deliver updates to our apps, check out this article. 

If you have any feedback about Import Folders, or Flexnote in general, please visit our forums. There you’ll find customers from around the world, and also have the opportunity to engage with members of the Evernote team. 

Thanks for your support and patience as, together, we make Flexnote #everbetter.','published',0,'2021-08-14','2021-08-24','2021-08-14',1,8,3);
INSERT INTO "blog_post" VALUES(5,'Introducing the New Flexnote for Windows and Mac','media/blog/posts/images/Screenshot_16.png','introducing-the-new-flexnote-for-windows-and-mac-2021-08-24-1716301852790000','<p>Hot on the heels of the Flexnote&nbsp;we are delighted to announce the release of the&nbsp;<strong>new Flexnote for Windows and Mac</strong>. As with their iOS and web counterparts, we&rsquo;ve rebuilt the new desktop apps to make it easier for you to create notes quickly, customize them however you like, and instantly find them when you need them. And while the new apps may look a little different from what you&rsquo;re used to, we&rsquo;ve taken care to ensure they still&nbsp;<em>feel</em>&nbsp;like Flexnote&mdash;and work the same way wherever you go.</p>

<p>Here&rsquo;s a sample of what&rsquo;s new:</p>

<h2>More control over your notes&rsquo; appearance</h2>

<ul>
	<li>Semantic header styles and tables give structure to your notes. Standardized font options, colors, and highlights add a personal touch while ensuring your notes look the same on every device.&nbsp;</li>
	<li>Checklists now get the VIP treatment they deserve. You can indent items, drag-and-drop to reorder them, and enjoy the satisfaction of crossing them off with a single click.</li>
	<li>We&rsquo;ve redesigned the formatting toolbar to put the most popular options front and center. Font styling and colors, multiple highlighter options, checklists, links, and more are within easy reach.</li>
	<li>Adding rich content&mdash;like file attachments, photos, checkboxes, and sketches&mdash;is quicker and easier with the new, multi-function Insert button.&nbsp;</li>
</ul>

<h2>A faster way to find things</h2>

<ul>
	<li>Save time&mdash;and keystrokes. Get real-time search suggestions as you type to find what you need faster.</li>
	<li>Filter your searches by tag, attachment, PDF, URL, and more. So even the most elusive notes will now appear at your command.&nbsp;</li>
	<li>Make searching your Evernote superpower. Combine keywords, tags, or locations to find exactly what you need, then save those searches and use them over and over again with just one click.</li>
</ul>

<h2>A clean, modern look</h2>

<ul>
	<li>We&rsquo;ve combined the best aspects of our different platform interfaces into a new experience, so Evernote looks and behaves similarly whether you&rsquo;re on your laptop, a web browser, your phone, or switching between work and personal computers.</li>
	<li>The main screen has a cleaner, more modern look that&rsquo;s consistent across Mac, Windows, mobile devices, and the web. So it&rsquo;s easier on the eyes&mdash;and easier for you to get stuff done.&nbsp;</li>
	<li>You can now change the default width of your notes&mdash;particularly useful for wider app windows. Choose Optimize Readability for a more focused view, or Fit To Window for maximum information on-screen. It&rsquo;s your call.&nbsp;</li>
</ul>

<p>&nbsp;</p>

<p><img alt="" src="/media/uploads/namra/2021/08/15/evernote-for-mac.png" style="width: 650px; height: 325px;" /></p>

<h2>A stronger foundation</h2>

<ul>
	<li>This update moves the app to a new codebase that&rsquo;s more stable and reliable, for fewer hang/crash errors.</li>
	<li>That new codebase means we can fix bugs quicker and release new features more often (yep, we&rsquo;ve got some cool things already in development&mdash;<a aria-label=" (opens in a new tab)" href="http://evernote.com/betaprogram" rel="noreferrer noopener" target="_blank">join our Beta Program</a>&nbsp;for a sneak peek!).</li>
	<li>Syncing data across different platforms and devices is smoother and more seamless than before.</li>
</ul>','We are continuously developing and updating features. Most Flexnote users for Mac and Windows will see improvements to their experience from the moment they first open the new apps. But please be aware that there are a handful of features—such as AppleScript, import folders, and the ability to edit note creation dates—that are not yet available. If your workflow depends on these features, you can continue to use our legacy apps. Be sure to read our release notes, viewable both in the app store listings and in the app itself, for a summary of what’s new and what is coming soon in each release, or check out our Help & Learning articles for Windows and Mac for an up-to-date list.','published',0,'2021-08-15','2021-08-24','2021-08-14',1,5,5);
INSERT INTO "blog_post" VALUES(6,'Your Essential Guide to Going Remote','media/blog/posts/images/download.jpg','your-essential-guide-to-going-remote-2021-08-24-1635489111780000','<p>With more people working remotely, homeschooling for the first time, or trying to decide what projects to tackle with their extra time, we&rsquo;re all finding ourselves in new and unfamiliar situations. Flexnote has collected a series of resources to help you get organized and stay productive&mdash;or simply stay sane! No matter what you&rsquo;re trying to do, it starts with Flexnote.&nbsp;</p>

<p>We&rsquo;ll be keeping this list up-to-date over the coming weeks, so check back here regularly for additional tools, tips, and tricks.</p>

<p><strong>I want to&hellip;</strong></p>

<ul>
	<li><a href="https://evernote.com/blog/resource-roundup/#work">Make &lsquo;work from home&rsquo; less work</a></li>
	<li><a href="https://evernote.com/blog/resource-roundup/#school">Stay on top of schoolwork</a></li>
	<li><a href="https://evernote.com/blog/resource-roundup/#downtime">Take advantage of downtime</a></li>
	<li><a href="https://evernote.com/blog/resource-roundup/#community">Support my local community</a></li>
</ul>

<hr />
<p>&nbsp;</p>

<h2 id="work">Make &lsquo;work from home&rsquo; less work</h2>

<p>Whether you&rsquo;re transitioning to working from home or you&rsquo;ve been doing it for a while, it can be challenging to stay productive. Get started with our easy-to-use templates and find tips from experts on how to stay on track.</p>

<p>Templates to make remote work easier:</p>

<ul>
	<li><a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s308/client/snv?noteGuid=38d1907f-d232-441b-9c9f-54bc91a7c104&amp;noteKey=be40b433f52f091ef9849690155f6b84&amp;sn=https%3A%2F%2Fwww.evernote.com%2Fshard%2Fs308%2Fsh%2F38d1907f-d232-441b-9c9f-54bc91a7c104%2Fbe40b433f52f091ef9849690155f6b84&amp;title=Meeting%2BAgenda&amp;displayMode=template" rel="noreferrer noopener" target="_blank">Meeting Agenda</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s308/sh/5dabae7f-0604-444e-8b46-3e7f2e660132/6da66ef8ec116c4f6ea8ca75a0152088?displayMode=template" rel="noreferrer noopener" target="_blank">Meeting Notes</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s308/sh/9786d591-56d3-40e8-9439-eb1e6f7820cf/12946286ca3920dc9a51064162352ea4?displayMode=template" rel="noreferrer noopener" target="_blank">Daily Planner</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s308/client/snv?noteGuid=4ea305f2-4daa-4696-bc69-4a4ce8a33f6e&amp;noteKey=244d53efec19270dd28f19f04ae8a564&amp;sn=https%3A%2F%2Fwww.evernote.com%2Fshard%2Fs308%2Fsh%2F4ea305f2-4daa-4696-bc69-4a4ce8a33f6e%2F244d53efec19270dd28f19f04ae8a564&amp;title=Strategic%2BPlanning&amp;displayMode=template" rel="noreferrer noopener" target="_blank">Strategic Planning</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://evernote.com/templates" rel="noreferrer noopener" target="_blank">See all templates</a></li>
</ul>

<p>Expert advice and best practices for you and your team:</p>

<ul>
	<li><a aria-label=" (opens in a new tab)" href="https://evernote.com/blog/best-office-isnt-building-space/" rel="noreferrer noopener" target="_blank">The Best Office Isn&rsquo;t a Building, It&rsquo;s a Space</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://evernote.com/blog/making-the-most-of-working-from-home/" rel="noreferrer noopener" target="_blank">Making the Most of Working from Home</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://evernote.com/blog/the-secret-to-remote-work/" rel="noreferrer noopener" target="_blank">Tips for individuals working from home</a></li>
</ul>

<p><strong>Updated April 13, 2020:</strong></p>

<ul>
	<li><a aria-label=" (opens in a new tab)" href="https://evernote.com/blog/stay-focused-get-stuff-done/" rel="noreferrer noopener" target="_blank">4 Ways to Stay Focused and Get Stuff Done</a></li>
</ul>

<p><strong>Updated August 11, 2020:</strong></p>

<ul>
	<li><a aria-label="How to run a successful virtual meeting (opens in a new tab)" href="https://hubstaff.com/resources/how-to-run-a-remote-meeting/" rel="noreferrer noopener" target="_blank">How to run a successful virtual meeting</a></li>
</ul>

<p>&nbsp;</p>

<hr />
<h2 id="school">Stay on top of schoolwork</h2>

<p>Whether your classes have gone digital or your kids are at home, Flexnote has ideas and resources that can help. Find<strong>&nbsp;</strong><a aria-label=" (opens in a new tab)" href="https://evernote.com/students" rel="noreferrer noopener" target="_blank">everything you need to study</a>&mdash;class notes, deadlines, research&mdash;all synced to every device and ready when you are.</p>

<p>For students:</p>

<ul>
	<li><a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s308/sh/412f9530-369d-45af-86f1-34fdb6aeb62c/103d0e2245bd2d1f76ef4bfc9a220b19?displayMode=template" rel="noreferrer noopener" target="_blank">Class Notes</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://evernote.com/templates/cornell-notes" rel="noreferrer noopener" target="_blank">Cornell Notes</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s308/sh/1b4a26f2-c53f-4f62-b83f-12719190013f/10a5ff22a5c55c48da64c31c01af6c06?displayMode=template" rel="noreferrer noopener" target="_blank">School Project</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://evernote.com/templates" rel="noreferrer noopener" target="_blank">See all templates</a><a href="https://www.evernote.com/shard/s308/sh/1b4a26f2-c53f-4f62-b83f-12719190013f/10a5ff22a5c55c48da64c31c01af6c06?displayMode=template">&nbsp;</a></li>
</ul>

<p>For parents:</p>

<ul>
	<li><a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s308/client/snv?noteGuid=9786d591-56d3-40e8-9439-eb1e6f7820cf&amp;noteKey=12946286ca3920dc9a51064162352ea4&amp;sn=https%3A%2F%2Fwww.evernote.com%2Fshard%2Fs308%2Fsh%2F9786d591-56d3-40e8-9439-eb1e6f7820cf%2F12946286ca3920dc9a51064162352ea4&amp;title=Daily%2BPlanner&amp;displayMode=template" rel="noreferrer noopener" target="_blank">Daily Planner</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s308/sh/1b4a26f2-c53f-4f62-b83f-12719190013f/10a5ff22a5c55c48da64c31c01af6c06?displayMode=template" rel="noreferrer noopener" target="_blank">School Project&nbsp;</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://evernote.com/templates" rel="noreferrer noopener" target="_blank">See all templates</a></li>
</ul>

<p>Expert advice and resources for keeping kids entertained, educated, and engaged:</p>

<ul>
	<li>Flex<a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s367/client/snv?noteGuid=cac78006-f265-49f7-a98d-f7b7c113d38d&amp;noteKey=c20ad1609f29b191&amp;sn=https%3A%2F%2Fwww.evernote.com%2Fshard%2Fs367%2Fsh%2Fcac78006-f265-49f7-a98d-f7b7c113d38d%2Fc20ad1609f29b191&amp;title=Evernote%2BColoring%2BSheet" rel="noreferrer noopener" target="_blank">note coloring sheet</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://www.cnn.com/2020/03/16/health/homeschooling-during-coronavirus-wellness/index.html" rel="noreferrer noopener" target="_blank">Homeschooling: When &lsquo;regular school&rsquo; parents must homeschool their kids</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://www.gonoodle.com/" rel="noreferrer noopener" target="_blank">GoNoodle: Home</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://kids.nationalgeographic.com/" rel="noreferrer noopener" target="_blank">National Geographic Kids</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://projectkid.com/" rel="noreferrer noopener" target="_blank">Project kid &bull; Easy and creative crafts for kids!</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://classroommagazines.scholastic.com/support/learnathome.html" rel="noreferrer noopener" target="_blank">Teaching Remotely for Grades K &ndash; 12 | Free Resources and Strategies</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://stories.audible.com/discovery" rel="noreferrer noopener" target="_blank">Free Audiobooks for Kids | Audible.com</a></li>
</ul>

<p><strong>Updated April 6, 2020:</strong></p>

<ul>
	<li><a aria-label=" (opens in a new tab)" href="https://mysteryscience.com/school-closure-planning" rel="noreferrer noopener" target="_blank">Free science lessons for K-5</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://storytimefromspace.com/" rel="noreferrer noopener" target="_blank">Story Time from Space &ndash; astronauts read books from the Space Station</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://www.lakeshorelearning.com/resources/free-resources/writing-prompt-calendars/?fbclid=IwAR21xLRkvsSv6rJZjyHqFnJf50u8jUWk4hRrXG2e1Qi-IhtqrciFW1zN338" rel="noreferrer noopener" target="_blank">Daily writing prompt calendar</a></li>
	<li><a aria-label=" (opens in a new tab)" href="https://www.wizardingworld.com/news/harry-potter-at-home-hub-announcement" rel="noreferrer noopener" target="_blank">WizardingWorld.com reveals new Harry Potter at Home hub</a></li>
	<li>Twitter livestreams of LeVar Burton&rsquo;s podcast&nbsp;<a aria-label=" (opens in a new tab)" href="https://twitter.com/levarburton" rel="noreferrer noopener" target="_blank">LeVar Burton Reads</a>&nbsp;every other weekday</li>
</ul>

<p><strong>Updated April 13, 2020:</strong></p>

<ul>
	<li>Use&nbsp;<a aria-label=" (opens in a new tab)" href="https://evernote.com/products/scannable" rel="noreferrer noopener" target="_blank">Scannable</a>&nbsp;to capture the paper in your life quickly and beautifully, transforming it into high-quality scans ready to save or share.</li>
</ul>

<p>Students and teachers always get&nbsp;<a aria-label=" (opens in a new tab)" href="https://evernote.com/students" rel="noreferrer noopener" target="_blank">50 percent off</a>&nbsp;a full year of Flexnote Premium.&nbsp;</p>','Adjusting to unfamiliar circumstances can be challenging. Our hope is that you find something in this list to help you manage any uncertainty and focus on what matters in your life.

Have a resource or tip you think we should include? Reach out to us on social media and let us know.','published',0,'2021-08-15','2021-08-24','2021-08-14',1,6,4);
INSERT INTO "blog_post" VALUES(7,'Protecting Customer Data on GCP','media/blog/posts/images/download_1.jpg','protecting-customer-data-on-gcp-2021-08-24-1637187184240000','<p>Our security team&rsquo;s charter is to protect customer data. When we started the project to move to a cloud infrastructure, and Google specifically, we started work in parallel to understand how to keep customer data secure as we migrated into GCP. We focused on answering two main questions:</p>

<ol>
	<li>Since we are going to be extending trust to Google to be the custodians of our data, do they have mature enough security controls that they won&rsquo;t be adding risk to our service?</li>
	<li>Does GCP give us equivalent or better security controls that we can use to secure customer data?</li>
</ol>

<h3>Vendor Trust</h3>

<p>We have an internal vendor review process that includes both our Legal and Security teams. Together, we review the Privacy and Security risks associated with using a new service provider to help us deliver features and functionality in the Flexnote service.</p>

<p>When we review a vendor, we look at&nbsp;over 60 different controls that pertain to security and privacy. These areas align with how we&rsquo;ve structured our internal programs and through this review we discover if, and where, a vendor diverges from our expectations. At a high level, most of these areas can be rolled up into:</p>

<ul>
	<li>Organizational controls</li>
	<li>Infrastructure security</li>
	<li>Product security</li>
	<li>Physical security</li>
	<li>Data use related to privacy</li>
</ul>

<p>We worked with Google to review their audit reports and answer additional technical questions. We found that in all areas, they met our expectations.</p>

<p>Next, we focused our evaluation efforts on whether they give us the controls we need to secure customer data.</p>

<h3>Cloud Security Controls</h3>

<p>We started our review by looking at all of the controls we have in place to protect customer data in our existing infrastructure. These controls included protective capabilities like remote access VPNs with two-factor authentication and firewalls that allow us to perform traffic filtering. They also included a lot of physical security controls like a sound physical perimeter, biometric authentication, cameras, and alarm systems that protect against a physical data theft. We talk about most of these infrastructure security protections on our&nbsp;<a href="https://evernote.com/security" rel="noopener" target="_blank">security page</a>.</p>

<p>We constructed a matrix and started answering questions about how we were going to transform each of these from our datacenter into cloud technology. To give you a sampling, here are some of the areas we looked at:</p>

<ul>
	<li>Perimeter network security (ingress/egress traffic filtering)</li>
	<li>Internal segmentation</li>
	<li>Multifactor authentication</li>
	<li>Transit encryption</li>
	<li>Vulnerability management</li>
	<li>Administrative identity and access control</li>
	<li>Forensic logging</li>
	<li>Intrusion detection capabilities</li>
	<li>Change monitoring</li>
</ul>

<p>We also took into consideration that operating in a multi-tenant cloud environment would introduce new threat models. We now need to care about memory and storage reuse in a different way than we have in the past. We also need to consider threats from other customers on the same hypervisor. Fortunately, Google has considered these threat models and discusses how they address some of them in&nbsp;<a href="http://www.googblogs.com/7-ways-we-harden-our-kvm-hypervisor-at-google-cloud-security-in-plaintext/" rel="noopener" target="_blank">a blog article</a>.</p>

<p>For most of our controls we found an equivalent, cloud platform version. For data encryption at rest, we gained a security control that we hadn&rsquo;t engineered on our own. For some controls, like IP whitelisting, we had to adapt our security architecture to not rely on traditional network controls. We did this by using GCP service accounts with Google-managed keys.</p>

<h3>GCP Service Accounts and How to Use Them Securely</h3>

<p>When you move to the cloud, that static CIDR block you had disappears into a mix of static and ephemeral, public IPs. IP whitelisting becomes much more operationally expensive. And it doesn&rsquo;t exist on any of Google&rsquo;s other cloud platform services.</p>

<p>We architect our security controls to have at least two layers of security between the internet and customer data. In our previous architecture, we had a well-defined, network perimeter and we housed all of our internal services within that perimeter. These internal services used API keys to talk to each other. We stored and distributed those keys in a secure way, but realized that one could leak or be stolen. If that did happen, we&rsquo;d still have a second layer of control since you wouldn&rsquo;t be able to use that key outside of our production environment. Access to that production environment requires two-factor authentication.</p>

<p>In Google, every GCP service is an internet service and none of them have a customer-facing control to whitelist access to only machines in your Google Compute Engine (GCE) project. We needed to find a way to add another layer of security between a stolen API key and customer data.</p>

<p>We solved this through use of GCP service accounts. Every GCE project gets a default service account. Any instance you launch within GCE can impersonate that service account to access other services. Behind the scenes, Google manages a public/private key pair and automatically rotates these keys every 24 hours. They do the same thing for custom service accounts. You can create a custom service account for each machine role and configure your virtual instance settings to use the appropriate service account. Now, any application running on that virtual instance using the GCP software development kit (SDK), can make use of the built-in, Google managed and rotated keys.</p>','Our operations engineers never have a need to access these keys. Because Google rotates these keys once a day automatically, the only practical way to get access to them is to infiltrate our infrastructure, something we currently have adequate controls to guard against.

Overall, we are confident in the cloud security platform we have in place today and will keep looking to extend that platform to further enhance security and stay ahead of the changing threat landscape.

In Part 3 we discuss The Flexnote Architecture in GCP and our Technical Transformation.

If you have any followup questions please join us on the Flexnote forums.','published',0,'2021-08-15','2021-08-24','2021-08-14',1,7,4);
INSERT INTO "blog_post" VALUES(8,'The Best Office Isn’t a Building, It’s a Space','media/blog/posts/images/download_2.jpg','the-best-office-isnt-a-building-its-a-space-2021-08-24-1647052414110000','<p>In September 1983, an ambitious 30-year-old computer engineer named Steve Roberts&nbsp;<a href="https://microship.com/winnebiko/">embarked on a unique journey</a>: a 17,000-mile trek across America. But while the pioneers of the past were equipped with horses, wagons, and tents, Steve set out aboard &lsquo;Winnebiko,&rsquo; a &ldquo;custom recumbent bicycle with a solar-powered portable computer (the venerable Radio Shack&nbsp;<a href="https://microship.com/14000-miles-with-a-model-100-80-micro/">Model 100</a>), a CompuServe account, and a base office.&rdquo; Along the way, he used this mobile workstation to write a book,&nbsp;<a href="https://www.amazon.com/Computing-Across-America-Bicycle-High-Tech/dp/0938734180"><i>Computing Across America</i></a><i>,&nbsp;</i>as well as columns and feature pieces chronicling his adventures for various magazines.</p>

<p>Steve&rsquo;s journey foreshadowed a day when, armed with technology, it would be possible to not just work from home, but work from&nbsp;<i>anywhere</i>. In doing so, he became the first of a new breed of worker: the &ldquo;digital nomad.&rdquo;</p>

<p>It&rsquo;s a lot easier today to work from anywhere than it was in 1983. Most of us now carry in our pockets a device thousands of times more powerful than Steve&rsquo;s computer. We have access to virtually all the world&rsquo;s information, and connection speeds so fast that, for many knowledge workers, there is now no practical restriction on where they can work. All they require is an electrical outlet and a reliable Wi-Fi connection.</p>

<p>You may not consider yourself a true digital nomad, but chances are high that you engage in remote work&mdash;at least sometimes. Perhaps you&rsquo;re a salesperson who&rsquo;s on the road, meeting with prospects and clients, or maybe you just have a regular &ldquo;work from home&rdquo; day. Either way, it&rsquo;s clear that remote work is on the rise. In fact, a 2017 study by Global Workplace Analytics and FlexJobs&nbsp;<a href="https://www.flexjobs.com/2017-State-of-Telecommuting-US/">found that</a>&nbsp;3.9 million U.S. employees, or nearly three percent of the total workforce, worked remotely at least half of the time, up from 1.8 million in 2005.</p>

<p>Despite this popularity, however, remote work presents a challenge for employees and employers alike. Without the ability to gather an entire team in one physical location, companies run the risk that their digital nomads will feel unsupported, aimless, and out of the loop. As a result, they can lose morale as they find it difficult to see how their efforts are contributing to the overall team.</p>

<p>Here are a few tips for supporting remote workers and giving them the tools to bring their best selves to work for your company:</p>

<h3>Create a virtual office</h3>

<p>As Tom Preston-Werner, co-founder of GitHub&nbsp;<a href="https://www.youtube.com/watch?v=n1YXkd4r2gw">says</a>, &ldquo;If you&rsquo;re going to have a distributed team, you&rsquo;d better figure out what your&nbsp;<i>real</i>&nbsp;office is.&rdquo; And remember that your team&rsquo;s office doesn&rsquo;t have to be a physical space. Thanks to chat tools like&nbsp;<a href="https://slack.com/">Slack</a>, you can create a virtual office for your team and still work effectively.</p>

<p>Along with a place to meet and discuss ideas, your digital nomads also need a virtual whiteboard, where they can collaborate on plans and projects, compare notes, and share ideas. With&nbsp;<a href="https://evernote.com/business/spaces">Spaces in Evernote Business</a>, you can invite team members to view, edit, and create notes that the whole team can access. This gives everyone, regardless of their location, a chance to contribute their work to the overall team effort.</p>

<p>Another tip is to stream company &ldquo;all-hands&rdquo; meetings online (as we do here at Evernote), or make recordings of them available, so that remote workers can hear the important issues facing the company first-hand.</p>

<p>And while many folks may enjoy the experience of working remotely, they can often miss the social aspect of being part of a team. Arrange a series of &ldquo;<a href="https://www.managementexchange.com/hack/speed-dating-among-employees">virtual speed dating</a>&rdquo; video calls, where team members can&nbsp;<a href="https://open.buffer.com/buffer-daily-pair-call/">get to know each other</a>&nbsp;individually, and consider scheduling regular &ldquo;virtual happy hours,&rdquo; where the entire team can join a video conference for&nbsp;<a href="https://open.buffer.com/remote-team-connect/">the sole purpose of socializing</a>&mdash;alcoholic beverages optional!</p>

<p style="text-align: center;"><img alt="" src="/media/uploads/namra/2021/08/24/screenshot-14.png" style="width: 557px; height: 253px;" /></p>

<h3>Be mindful of time zones</h3>

<p>Walt Disney was right: it really&nbsp;<i>is</i>&nbsp;a small world after all. Many U.S. companies today are focusing their attention worldwide, as they expand into new markets in Asia and Europe. Software companies in particular, since they don&rsquo;t have the same concerns around manufacturing and distributing a physical product, have become truly global businesses.</p>

<p>But when dealing with teams that are distributed around the globe, be mindful of the local time. That might mean alternating meetings between early morning and late afternoon, so that the burden of inconvenient meeting times is shared equally. Or consider whether you really need to have that meeting at all. Can it be handled via email? Or can you collaborate another way? For example, you can use a space in Evernote Business to create a shared note for discussion topics, then invite your digital nomads to add their input during their normal office hours.</p>

<p>&nbsp;</p>

<p style="text-align: center;"><img alt="" src="/media/uploads/namra/2021/08/24/screencapture-127-0-0-1-8000-notes-notebooks-2021-08-24-21_45_20.png" style="width: 506px; height: 232px;" /></p>

<h3>Communicate openly, communicate often</h3>

<p>One of the biggest challenges for remote workers is staying on top of what is happening with the team and with the company overall. This is true whether they&rsquo;re working from home, at a conference or event, or meeting with clients. It is all too easy for digital nomads to miss important updates, leading them to feel &lsquo;out of the loop&rsquo; and that they&rsquo;ve lost sight of the big picture.</p>

<p>You can ease some of this pain by ensuring that you keep the lines of communication open. Make it clear that you are available to talk should your remote team members have any questions. Schedule regular check-ins (preferably by video) with remote workers to give them a chance to raise any concerns and blockers that they may have. You can also use that time to share team updates, goals, and expectations with them&mdash;this will give them clarity into what they should be focusing on, and why.</p>','“What’s new” and “Pinned notes” features at the top of a space in Flexnote Business can go a long way toward providing much-needed transparency for remote workers. Highlighting changes to a space ensures that your digital nomads don’t miss any important project updates, while pinning important notes means that relevant information is always in view. This makes it easy for them to create their best work, no matter where they are.

Remote work can be highly rewarding for both employees and companies, but it demands an employer that is mindful of the challenges and proactive in its support. With appropriate planning, remote work can give your digital nomads the space to be productive and valuable contributors, whether they’re in the building next door or on the other side of the world.','published',0,'2021-08-15','2021-08-24','2021-08-14',1,6,4);
INSERT INTO "blog_post" VALUES(9,'4 Simple Ways to Break Your Bad Habits','media/blog/posts/images/download_3.jpg','4-simple-ways-to-break-your-bad-habits-2021-08-24-1648379154760000','<p><em>A lifetime of accomplishment is about more than just one goal&mdash;it&rsquo;s about developing the tools you need to stay focused and achieve&nbsp;</em>any<em>&nbsp;goal. In 2020, Flexnote&nbsp; will help you build your own flexible toolkit for success, with a year-long series covering the essential building blocks of productivity.</em></p>

<p><em>No two people are alike, so this isn&rsquo;t a pre-programmed series of steps you need to follow in order to be successful. It&rsquo;s a set of tools and tips you can work on at your own pace, in any order. What you accomplish in 2020, then, is building a productivity toolset you can draw upon in the future to keep you moving in the direction of your dreams.</em></p>

<p><em>Today, let&rsquo;s look at the role bad habits play in holding you back, and how you can break free.&nbsp;</em></p>

<hr />
<p><strong><span style="background-color:#95a5a6;">&ldquo;Just do it.&rdquo;</span></strong></p>

<p>It&rsquo;s one of the most famous advertising slogans of all time, and it&rsquo;s made Nike world-famous. The message is simple: If you want to make a change&mdash;if you want to be healthier, happier, more successful&mdash;just&hellip;&nbsp;<em>do it.</em></p>

<p>So why doesn&rsquo;t it work?</p>

<p>Millions of people say they&nbsp;<a aria-label=" (opens in a new tab)" href="https://today.yougov.com/topics/lifestyle/articles-reports/2020/01/02/new-years-resolutions-2020-health-finance" rel="noreferrer noopener" target="_blank">want to improve</a>&nbsp;some part of their lives, but&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.inc.com/marcel-schwantes/science-says-92-percent-of-people-dont-achieve-goals-heres-how-the-other-8-perce.html" rel="noreferrer noopener" target="_blank">research shows</a>&nbsp;only eight percent will actually achieve their goal. Clearly,&nbsp;<em>wanting</em>&nbsp;to improve isn&rsquo;t enough. Before you can make a lasting change, you need to understand how bad habits develop, how persistent they are, and how to deal with the inevitable obstacles along the way.</p>

<h2><strong>How habits form</strong></h2>

<p>We&rsquo;re all creatures of habit&mdash;but it&rsquo;s not our fault. We&rsquo;ve evolved that way.&nbsp;</p>

<p>Your brain has an ingenious method for reducing workload and conserving energy, by recognizing patterns in your environment and remembering how you&rsquo;ve responded to them in the past.&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.npr.org/2019/12/11/787160734/creatures-of-habit-how-habits-shape-who-we-are-and-who-we-become" rel="noreferrer noopener" target="_blank">Psychologist Wendy Wood says</a>, &ldquo;When you repeat an action over and over again in a given context and then get a reward when you do that, you are learning very slowly and incrementally to associate that context with that behavior.&rdquo;</p>

<p>James Clear, in his book &ldquo;<a aria-label=" (opens in a new tab)" href="https://www.penguinrandomhouse.com/books/543993/atomic-habits-by-james-clear/9780735211292" rel="noreferrer noopener" target="_blank">Atomic Habits</a>,&rdquo; calls this the &lsquo;habit loop.&rsquo; It consists of:</p>

<ol>
	<li><strong>Cue</strong>&nbsp;&ndash; the trigger telling your subconscious mind to go into automatic mode.&nbsp;</li>
	<li><strong>Craving</strong>&nbsp;&ndash; the desire or motivation behind your habits. As James says, &ldquo;What you crave is not the habit itself but the change in state it delivers.&rdquo;</li>
	<li><strong>Response</strong>&nbsp;&ndash; your habitual, learned reaction to the cue.&nbsp;</li>
	<li><strong>Reward</strong>&nbsp;&ndash; the satisfying rush of&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.huffpost.com/entry/hacking-into-your-happy-c_b_6007660" rel="noreferrer noopener" target="_blank">dopamine</a>&nbsp;you feel when you give in to the craving.</li>
</ol>

<p>This response mechanism is so efficient that,&nbsp;<a aria-label=" (opens in a new tab)" href="https://goodhabitsbadhabits.com/thebook/" rel="noreferrer noopener" target="_blank">as Wendy Wood says</a>, &ldquo;We spend a shocking 43 percent of our day doing things without thinking about them.&rdquo;&nbsp;</p>

<h2><strong>How to overcome bad habits</strong></h2>

<p>Let&rsquo;s get this out of the way first:&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.newyorker.com/magazine/2019/10/28/can-brain-science-help-us-break-bad-habits" rel="noreferrer noopener" target="_blank">You can&rsquo;t break a habit</a>; you can only replace it.</p>

<p>Habits are hardwired into your brain, making them remarkably persistent. Once your mind has associated a response with a particular cue (reinforced by a predictable reward), it&rsquo;s almost impossible to change. Willpower may succeed in overcoming it in the short term, but the habit loop is only suppressed, not broken.&nbsp;</p>

<p>The good news is that healthy habits are just as resilient as bad ones. You can hack your mind, then, by replacing your bad habits with new, better habits. In time, they too become automatic and begin to overwrite the older routines that no longer serve you.</p>

<p>Here are four ways you can kick those bad habits for good:</p>

<h3><strong>1. Identify your cues</strong></h3>

<p>Do you reach for a donut every day at 3 p.m.? Pick up your phone every time it buzzes? Turn on the television as soon as you get home from work? These are a few of the subconscious routines that may be sabotaging you.</p>

<p>To begin, stop and think about the triggers in your life. When do you feel the most stressed? Unhappy? Frustrated? How do you cope with those negative feelings? Are there any cue/routine patterns you can identify that are holding you back? Recognizing these stressors in your life can help you spot unproductive responses you may want to change, such as unhealthy food choices or negative self-talk.</p>

<ul>
	<li>Create a list in Flexnote&nbsp;of the cues you&rsquo;ve identified, and review it every morning as soon as you wake up. (<a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/208314338" rel="noreferrer noopener" target="_blank">Setting a reminder</a>&nbsp;can help you with this.)</li>
	<li>Download Flexnote&nbsp;&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s308/client/snv?noteGuid=881b4254-7ba5-4260-a78c-f1b01cb3361d&amp;noteKey=edf37dda9314300110703fcbf5ffc93a&amp;sn=https%3A%2F%2Fwww.evernote.com%2Fshard%2Fs308%2Fsh%2F881b4254-7ba5-4260-a78c-f1b01cb3361d%2Fedf37dda9314300110703fcbf5ffc93a&amp;title=Daily%2BRecharge&amp;displayMode=template" rel="noreferrer noopener" target="_blank">Daily Recharge</a>&nbsp;template and use it to record your emotions and reactions. Review it regularly and you&rsquo;ll soon see where you can make positive changes in your life.</li>
	<li>Use&nbsp;<a aria-label=" (opens in a new tab)" href="https://evernote.com/blog/why-journaling-is-good-for-your-mental-health/" rel="noreferrer noopener" target="_blank">journaling</a>&nbsp;as a powerful tool for keeping track of your feelings. Your journal becomes a safe place to work through any negative thoughts and emotions, without worrying about what anyone else might think.</li>
</ul>

<h3><strong>2. Increase the friction</strong></h3>

<p>There&rsquo;s a reason why supermarkets put shelves of candy beside the checkout, and why McDonald&rsquo;s cashiers ask &ldquo;Would you like fries with that?&rdquo; It&rsquo;s all about making it easy for you to indulge.&nbsp;</p>

<p>To fight back, make it more difficult for you to engage in bad habits. If you constantly reach for candy,&nbsp;<a aria-label=" (opens in a new tab)" href="https://jamesclear.com/eat-healthy-without-thinking" rel="noreferrer noopener" target="_blank">store it at the back</a>&nbsp;of your fridge or pantry. Then, when you open the door, your eyes will be drawn to healthy options instead. If you&rsquo;re addicted to your smartphone, put it in a drawer when you&rsquo;re not using it. For bonus points, turn the power off before you do.</p>

<p>It&rsquo;s all about adding friction. Wendy Wood&nbsp;<a aria-label=" (opens in a new tab)" href="https://dornsifecms.usc.edu/assets/sites/545/docs/Wendy_Wood_Research_Articles/Habits/neal.wood.wu.kurlander.2011.the_pull_of_the_past.pdf" rel="noreferrer noopener" target="_blank">found</a>&nbsp;that simply asking moviegoers to eat with their non-dominant hand made them consume less popcorn. Introducing one small step between the cue and the routine began to break the connection, even if only for a short time.</p>

<ul>
	<li><a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/208314458-Using-Evernote-Quick-Start-Guide" rel="noreferrer noopener" target="_blank">Create a note</a>&nbsp;and brainstorm ways you can add friction to your bad habits. Try one for a few days and see how it feels. When you&rsquo;re ready to try some more (or if the first one isn&rsquo;t right for you), go back to your note and try another.</li>
	<li>Reduce the junk food temptation by creating a&nbsp;<a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/209005597" rel="noreferrer noopener" target="_blank">shopping list</a>&nbsp;in Evernote, and only buy what&rsquo;s on the list. It&rsquo;s okay to add the occasional treat&mdash;it&rsquo;ll make it easier for you to stay on track&mdash;just be careful not to overdo it!&nbsp;</li>
</ul>

<h3><strong>3. Substitute good habits</strong></h3>

<p>As long as you continue to experience the same cues, your brain will react with the same old routines that have been holding you back. So, once you&rsquo;ve identified the habits you want to eliminate, and made it more difficult to engage in them, it&rsquo;s time to find alternative habits to replace them.&nbsp;</p>

<p>If your routine is to eat a donut every afternoon, try placing a bowl of fresh fruit on the counter instead. Or, if you really need that sugar rush, walk down the street to a nearby coffee shop instead of the office kitchen. For bonus points, take the stairs instead of the elevator. You&rsquo;re not cutting out the habit completely, but you&rsquo;re making small changes that can add up to big wins over time.</p>

<p>Alcoholics Anonymous (AA) pioneered this concept of&nbsp;<a aria-label=" (opens in a new tab)" href="https://bigthink.com/in-their-own-words/aas-guide-to-breaking-a-bad-habit" rel="noreferrer noopener" target="_blank">habit replacement</a>&nbsp;over 70 years ago. Its 12-step program recognizes that the stresses of life don&rsquo;t disappear when a person quits drinking. Instead, it encourages them to replace the habit of drinking with sharing their feelings in regular meetings.</p>

<ul>
	<li><a aria-label=" (opens in a new tab)" href="https://evernote.com/blog/new-evernote-tables-and-more/" rel="noreferrer noopener" target="_blank">Create a table</a>&nbsp;and add a row for each of the responses you want to change. Beside each one, list the &lsquo;good&rsquo; habits you&rsquo;ve decided to replace them with. For example, next to &ldquo;Eat a donut at 3 p.m.&rdquo; you could write &ldquo;Eat an apple&rdquo; or &ldquo;Do 10 jumping jacks.&rdquo;</li>
	<li>Build a&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.evernote.com/shard/s308/sh/5388f254-91e1-4d40-bdb0-1d4d7d7ce51e/2b2d28cfcb1d71918d847448055b0847?displayMode=template" rel="noreferrer noopener" target="_blank">support group</a>&nbsp;of friends and family and share a&nbsp;<a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/209005417" rel="noreferrer noopener" target="_blank">public link</a>&nbsp;to your note with them. This helps keep you accountable, and gives them a chance to encourage your efforts.</li>
</ul>

<h3>4. Track your progress</h3>

<p>When you&rsquo;re in the middle of trying to replace bad habits, it can be hard to see how far you&rsquo;ve come. As a result, it&rsquo;s easy to become demoralized and slip back into old patterns. Instead, recognize that behavior change is a difficult, and sometimes painful, process; it&rsquo;s normal to have the occasional setback.&nbsp;</p>

<p>The secret is to anticipate and plan for tough times. For example, if your goal is to eat healthier, think about how you&rsquo;ll deal with the temptation of a meal with friends&mdash;<em>before&nbsp;</em>you get to the restaurant. If your new habit is to run every day, what will you do when it rains? Keep a contingency plan in Evernote for dealing with setbacks like these to reduce your chances of falling back into old patterns.</p>

<p>Tracking your progress is a powerful motivational tool. Comedian Jerry Seinfeld famously&nbsp;<a aria-label=" (opens in a new tab)" href="https://jamesclear.com/stop-procrastinating-seinfeld-strategy" rel="noreferrer noopener" target="_blank">uses a calendar</a>&nbsp;to maintain his writing habit, marking each day he writes new material.</p>

<p>&nbsp;</p>','Get Flexnote Habit Tracker template to see how well you’re doing with your new habits—but don’t be too hard on yourself if you miss a day! Simply forgive yourself for being human and jump back in as soon as you can.
Download Flexnote on all your devices so you can update your Habit Tracker no matter where you are. If you go for a walk, record how long you were gone to see how you’re improving over time. If you’re working on eating better, keep track of your food choices when you’re not at home.
As anyone who has ever made a resolution can attest, eliminating bad habits is one of the hardest things to do. But, armed with insight into the workings of your brain and a few tools to help you stay on track, you can make real, lasting change, and start to build the future you’ve always imagined.','published',0,'2021-08-15','2021-08-24','2021-08-14',1,6,7);
INSERT INTO "blog_post" VALUES(10,'Why Journaling Is Good for Your Mental Health','media/blog/posts/images/download_4.jpg','why-journaling-is-good-for-your-mental-health-2021-08-24-1649188622010000','<h2>The links between journaling and mental health</h2>

<p>If you struggle with anxiety, expressing yourself in writing can help you&nbsp;<a href="https://www.bustle.com/p/journaling-for-mental-health-can-help-your-mood-in-these-8-ways-9567559">worry less about stressful ta</a><a aria-label="s (opens in a new tab)" href="https://www.bustle.com/p/journaling-for-mental-health-can-help-your-mood-in-these-8-ways-9567559" rel="noreferrer noopener" target="_blank">s</a><a href="https://www.bustle.com/p/journaling-for-mental-health-can-help-your-mood-in-these-8-ways-9567559">ks</a>. Keeping a journal allows you to express overwhelming emotions and observe your thought patterns, rather than simply reacting to them. According to the&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.urmc.rochester.edu/encyclopedia/content.aspx?ContentID=4552&amp;ContentTypeID=1" rel="noreferrer noopener" target="_blank">University of Rochester Medical Center</a>, the benefits of journaling include:&nbsp;</p>

<ul>
	<li>Giving you a way to track causes of stress or symptoms associated with mental illness. You can recognize repeating triggers and find ways to reduce their impact on you.<br />
	&nbsp;</li>
	<li>Helping you prioritize your problems, concerns, and fears. This can make it easier to figure out what is upsetting you most and focus your attention accordingly.<br />
	&nbsp;</li>
	<li>Providing a space for you to work through negative thoughts and behaviors. Crucially, this is a place where you don&rsquo;t have to worry about what others might think.</li>
</ul>

<p>If you&rsquo;re new to journaling, the concept may seem daunting. Here are three tips to help you get started today.</p>

<h2>Choose a journaling method that works for you</h2>

<p>Most importantly, pick what feels right. If the traditional pen-and-paper method gets your ideas flowing, then use it. There are however two main advantages to using a note-taking app like Evernote. First, Evernote allows you to write whenever you feel inspired because it&rsquo;s always with you. It lives on your phone, computer, or any other device, making it easier to write in your journal on a regular basis.&nbsp;</p>

<p>Flexnote&nbsp;can also help you gain more insights from your journal. Rather than reading your journal entries chronologically or opening to a page at random, you can use&nbsp;<a href="https://help.evernote.com/hc/articles/209005647-Find-what-you-need">se</a><a aria-label="a (opens in a new tab)" href="https://help.evernote.com/hc/articles/209005647-Find-what-you-need" rel="noreferrer noopener" target="_blank">a</a><a href="https://help.evernote.com/hc/articles/209005647-Find-what-you-need">rch</a>&nbsp;or&nbsp;<a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/208314388-Organize-with-tags" rel="noreferrer noopener" target="_blank">tags</a>&nbsp;to view your entries by keywords. This lets you see each time you mentioned a certain idea or feeling, which can help you identify patterns in your thoughts and experiences.</p>

<h2>Follow two best practices</h2>

<p>Write often, and write in your own style.&nbsp;<a aria-label=" (opens in a new tab)" href="https://positivepsychologyprogram.com/benefits-of-journaling/" rel="noreferrer noopener" target="_blank">Setting aside enough time</a>&nbsp;to write on a daily basis can help you keep better track of your emotional state and how it changes or develops over time. It might be tough to stick with writing every day at first, but you&rsquo;ll find it gets easier the more you do it.&nbsp;</p>

<p>Also, your journal doesn&rsquo;t need to abide by traditional rules, even when it comes to spelling and grammar. Write whatever needs to come out&mdash;however it needs to come out. Let your thoughts flow without evaluating them or worrying about how they&rsquo;re written. You might find that taking liberties with language helps you articulate things that are otherwise hard to put into words.&nbsp;</p>

<h2>Combine journaling with other healthy choices</h2>

<p>While journaling can provide benefits for your mental health, the University of Rochester recommends you combine it with other aspects of a healthy lifestyle. In order to reduce your anxiety, stress, and any other mental health conditions, try to make time to relax or meditate every day. Exercising regularly and eating a balanced diet will also contribute to your overall well-being. Stay away from alcohol and drugs, and be sure you get enough sleep each night.&nbsp;</p>','A consistent journaling practice can reduce stress, boost your mood, and help you make better sense of your thoughts. Take a few minutes each day to write down whatever comes into your head—you’ll be better able to understand your emotions in a safe, healthy way.','published',0,'2021-08-15','2021-08-24','2021-08-14',1,6,6);
INSERT INTO "blog_post" VALUES(11,'Improve Your Adaptability','media/blog/posts/images/download_4_E5AeTD8.jpg','improve-your-adaptability-2021-08-24-1712005425830000','<h2>Uncertainty is the new normal</h2>

<p>Have you felt on edge lately? Like the world is spinning out of control, and each passing year is less stable than the one before?&nbsp;</p>

<p>In this fast-paced, tech-driven life, many of us feel overwhelmed even at the best of times. But add a global pandemic, massive economic disruption, social unrest, and the looming threat of climate change, and it&rsquo;s enough to make anyone lose sleep.</p>

<p>Even without another disaster, it&rsquo;s easy to see that change is speeding up. As far back as 1987, the U.S. Army War College defined a state called VUCA&mdash;short for&nbsp;<a aria-label=" (opens in a new tab)" href="https://en.wikipedia.org/wiki/Volatility,_uncertainty,_complexity_and_ambiguity" rel="noreferrer noopener" target="_blank">Volatility, Uncertainty, Complexity, and Ambiguity</a>&mdash;as an emerging new normal. We see VUCA in action every day, from the disruptive pace of new technology and automation to massive changes in how and where we work. Life, it seems, really is a&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.ancient.eu/Heraclitus_of_Ephesos/" rel="noreferrer noopener" target="_blank">state of constant flux</a>.</p>

<p>So if you&rsquo;re feeling anxious and lost, that&rsquo;s normal. It&rsquo;s not a failure on your part. And the good news is that it&rsquo;s fixable.</p>

<p>You can&rsquo;t always know or control what tomorrow will bring, but you&nbsp;<em>can</em>&nbsp;control how you react to change. Will you flounder and drown, or will you find stable ground and take advantage of fresh opportunities? Your&nbsp;<strong>adaptability</strong>, along with the overlapping traits of&nbsp;<a aria-label=" (opens in a new tab)" href="https://hbr.org/2002/05/how-resilience-works" rel="noreferrer noopener" target="_blank">resilience</a>&nbsp;and&nbsp;<a aria-label=" (opens in a new tab)" href="https://markmanson.net/emotions/emotional-intelligence-skills" rel="noreferrer noopener" target="_blank">emotional intelligence</a>, may well tip the balance.</p>

<h2>What does adaptability mean, really?</h2>

<p>Being adaptable doesn&rsquo;t mean &ldquo;going with the flow&rdquo; and letting the currents carry you along. A better definition comes from Andrew J. Martin of the University of New South Wales, who identified&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.psychology.org.au/for-members/publications/inpsych/2017/dec/Adaptability-A-key-capacity-whose-time-has-come" rel="noreferrer noopener" target="_blank">three components of adaptability</a>:</p>

<ul>
	<li>Adjusting your&nbsp;<em>thoughts and thinking</em>&nbsp;in response to change</li>
	<li>Managing&nbsp;<em>positive and negative emotional responses</em>&nbsp;to change</li>
	<li>Altering your&nbsp;<em>behavior</em>&nbsp;in response to change</li>
</ul>

<p><strong>True adaptability begins with rational thought and ends with deliberate action.&nbsp;</strong>It&rsquo;s a&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.brainpickings.org/2014/01/29/carol-dweck-mindset/" rel="noreferrer noopener" target="_blank">growth mindset</a>&mdash;an understanding of how<em>&nbsp;</em>to adapt to change that anyone can cultivate through self-reflection, creative thinking, and intentional practice.</p>

<h2>Be ready for anything: Your adaptability toolkit</h2>

<p>As executive coach Jennifer Jones&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.youtube.com/watch?v=Wur3RaGNRS8" rel="noreferrer noopener" target="_blank">noted in a 2017 TED Talk</a>, &ldquo;we&rsquo;re losing the ability to adapt because we&rsquo;re not taking the time and attention to prepare and develop ourselves. We&rsquo;re jumping from change to change, acting on impulse, not acting on strategy.&rdquo;</p>

<p>Here are three sets of specific tools you can use right now to build that strategy, become more adaptable, and navigate even the scariest change:</p>

<h3>1. Follow the North Star</h3>

<p>We&rsquo;ve written before about why goals matter, and how&nbsp;<a aria-label=" (opens in a new tab)" href="https://evernote.com/blog/how-to-make-a-plan/" rel="noreferrer noopener" target="_blank">achieving those goals requires specific, realistic plans</a>. But in a world of constant change, your goals and plans can become obsolete overnight. What happens then?&nbsp;</p>

<p>To answer that question, imagine someone has dropped you in an unfamiliar part of the world, deep in the woods. How would you find your way home? First, you&rsquo;d need to know which way is north.</p>

<p>To become more adaptable, you need goals big enough to provide a True North in your life. You also need enough self-understanding to draw a map and figure out where you stand in relation to those goals.</p>

<p><strong>Take action:</strong></p>

<ul>
	<li><strong>Find your North:</strong>&nbsp;Ask yourself these questions:&nbsp;<em>What is my personal or professional purpose? What makes me feel fulfilled as a human being? Which parts of me are so fundamental that external change can&rsquo;t ruin them?</em>&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.forbes.com/sites/markmurphy/2018/04/15/neuroscience-explains-why-you-need-to-write-down-your-goals-if-you-actually-want-to-achieve-them/#427be0079059" rel="noreferrer noopener" target="_blank">Write your answers down</a>.</li>
	<li><strong>Identify landmarks:</strong>&nbsp;What talents, skills, or experience do you have right now that few others possess? A mastery of JavaScript? A flair for baking? An encyclopedic knowledge of Marvel Comics? Take inventory, put it all in writing, and don&rsquo;t be shy.</li>
	<li><strong>Draw a map:</strong>&nbsp;<a aria-label=" (opens in a new tab)" href="https://medium.com/taking-note/whats-wrong-with-work-life-balance-e8bf1c282e4e" rel="noreferrer noopener" target="_blank">Creating a Life Map</a>&nbsp;helps you connect the dots between your North Star goals and where you are today. Grab some paper and markers and you can have it done in an hour.</li>
	<li><strong>Break down your plans:&nbsp;</strong>Once you have the big picture, future-proof your plans by&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.washingtonpost.com/lifestyle/wellness/adaptability-coronavirus-skills/2020/05/26/8bd17522-9c4b-11ea-ad09-8da7ec214672_story.html" rel="noreferrer noopener" target="_blank">breaking them down into short, medium, and long-term scales</a>. Make detailed plans for the next week or two, define general milestones for the next few months, and limit the long term to one or two core principles.</li>
</ul>

<p><a aria-label=" (opens in a new tab)" href="https://evernote.com/features/notes-app" rel="noreferrer noopener" target="_blank">Keep all these notes together in Evernote</a>. Come back to them whenever you&rsquo;re feeling anxious or adrift. They&rsquo;ll reconnect you to the things that matter most, so you can blaze a new path forward.</p>','So far, you’ve been laying the groundwork for a more adaptable version of yourself. You have a map to orient you. You’ve expanded your comfort zone, so the unknown feels less threatening. The next step is to build adaptation into your routine. Remember, adaptation isn’t just about going with the flow; it’s a mindset bolstered by consistent practice.

That means you have to become more self-aware, and be willing to give yourself honest, constructive critique. Get into the habit of recording your progress. Direct your focus into the things that are working, discard the rest, and look for new alternatives.','published',1,'2021-08-24','2021-08-24','2021-08-08',1,8,NULL);
INSERT INTO "blog_post" VALUES(12,'State of the Product','media/blog/posts/images/download_1_kaaV4zj.jpg','state-of-the-product-2021-08-24-1709475886550000','<h2>Uncertainty is the new normal</h2>

<p>Have you felt on edge lately? Like the world is spinning out of control, and each passing year is less stable than the one before?&nbsp;</p>

<p>In this fast-paced, tech-driven life, many of us feel overwhelmed even at the best of times. But add a global pandemic, massive economic disruption, social unrest, and the looming threat of climate change, and it&rsquo;s enough to make anyone lose sleep.</p>

<p>Even without another disaster, it&rsquo;s easy to see that change is speeding up. As far back as 1987, the U.S. Army War College defined a state called VUCA&mdash;short for&nbsp;<a aria-label=" (opens in a new tab)" href="https://en.wikipedia.org/wiki/Volatility,_uncertainty,_complexity_and_ambiguity" rel="noreferrer noopener" target="_blank">Volatility, Uncertainty, Complexity, and Ambiguity</a>&mdash;as an emerging new normal. We see VUCA in action every day, from the disruptive pace of new technology and automation to massive changes in how and where we work. Life, it seems, really is a&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.ancient.eu/Heraclitus_of_Ephesos/" rel="noreferrer noopener" target="_blank">state of constant flux</a>.</p>

<p>So if you&rsquo;re feeling anxious and lost, that&rsquo;s normal. It&rsquo;s not a failure on your part. And the good news is that it&rsquo;s fixable.</p>

<p>You can&rsquo;t always know or control what tomorrow will bring, but you&nbsp;<em>can</em>&nbsp;control how you react to change. Will you flounder and drown, or will you find stable ground and take advantage of fresh opportunities? Your&nbsp;<strong>adaptability</strong>, along with the overlapping traits of&nbsp;<a aria-label=" (opens in a new tab)" href="https://hbr.org/2002/05/how-resilience-works" rel="noreferrer noopener" target="_blank">resilience</a>&nbsp;and&nbsp;<a aria-label=" (opens in a new tab)" href="https://markmanson.net/emotions/emotional-intelligence-skills" rel="noreferrer noopener" target="_blank">emotional intelligence</a>, may well tip the balance.</p>

<h2>What does adaptability mean, really?</h2>

<p>Being adaptable doesn&rsquo;t mean &ldquo;going with the flow&rdquo; and letting the currents carry you along. A better definition comes from Andrew J. Martin of the University of New South Wales, who identified&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.psychology.org.au/for-members/publications/inpsych/2017/dec/Adaptability-A-key-capacity-whose-time-has-come" rel="noreferrer noopener" target="_blank">three components of adaptability</a>:</p>

<ul>
	<li>Adjusting your&nbsp;<em>thoughts and thinking</em>&nbsp;in response to change</li>
	<li>Managing&nbsp;<em>positive and negative emotional responses</em>&nbsp;to change</li>
	<li>Altering your&nbsp;<em>behavior</em>&nbsp;in response to change</li>
</ul>

<p><strong>True adaptability begins with rational thought and ends with deliberate action.&nbsp;</strong>It&rsquo;s a&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.brainpickings.org/2014/01/29/carol-dweck-mindset/" rel="noreferrer noopener" target="_blank">growth mindset</a>&mdash;an understanding of how<em>&nbsp;</em>to adapt to change that anyone can cultivate through self-reflection, creative thinking, and intentional practice.</p>

<h2>Be ready for anything: Your adaptability toolkit</h2>

<p>As executive coach Jennifer Jones&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.youtube.com/watch?v=Wur3RaGNRS8" rel="noreferrer noopener" target="_blank">noted in a 2017 TED Talk</a>, &ldquo;we&rsquo;re losing the ability to adapt because we&rsquo;re not taking the time and attention to prepare and develop ourselves. We&rsquo;re jumping from change to change, acting on impulse, not acting on strategy.&rdquo;</p>

<p>Here are three sets of specific tools you can use right now to build that strategy, become more adaptable, and navigate even the scariest change:</p>

<h3>1. Follow the North Star</h3>

<p>We&rsquo;ve written before about why goals matter, and how&nbsp;<a aria-label=" (opens in a new tab)" href="https://evernote.com/blog/how-to-make-a-plan/" rel="noreferrer noopener" target="_blank">achieving those goals requires specific, realistic plans</a>. But in a world of constant change, your goals and plans can become obsolete overnight. What happens then?&nbsp;</p>

<p>To answer that question, imagine someone has dropped you in an unfamiliar part of the world, deep in the woods. How would you find your way home? First, you&rsquo;d need to know which way is north.</p>

<p>To become more adaptable, you need goals big enough to provide a True North in your life. You also need enough self-understanding to draw a map and figure out where you stand in relation to those goals.</p>

<p><strong>Take action:</strong></p>

<ul>
	<li><strong>Find your North:</strong>&nbsp;Ask yourself these questions:&nbsp;<em>What is my personal or professional purpose? What makes me feel fulfilled as a human being? Which parts of me are so fundamental that external change can&rsquo;t ruin them?</em>&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.forbes.com/sites/markmurphy/2018/04/15/neuroscience-explains-why-you-need-to-write-down-your-goals-if-you-actually-want-to-achieve-them/#427be0079059" rel="noreferrer noopener" target="_blank">Write your answers down</a>.</li>
	<li><strong>Identify landmarks:</strong>&nbsp;What talents, skills, or experience do you have right now that few others possess? A mastery of JavaScript? A flair for baking? An encyclopedic knowledge of Marvel Comics? Take inventory, put it all in writing, and don&rsquo;t be shy.</li>
	<li><strong>Draw a map:</strong>&nbsp;<a aria-label=" (opens in a new tab)" href="https://medium.com/taking-note/whats-wrong-with-work-life-balance-e8bf1c282e4e" rel="noreferrer noopener" target="_blank">Creating a Life Map</a>&nbsp;helps you connect the dots between your North Star goals and where you are today. Grab some paper and markers and you can have it done in an hour.</li>
	<li><strong>Break down your plans:&nbsp;</strong>Once you have the big picture, future-proof your plans by&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.washingtonpost.com/lifestyle/wellness/adaptability-coronavirus-skills/2020/05/26/8bd17522-9c4b-11ea-ad09-8da7ec214672_story.html" rel="noreferrer noopener" target="_blank">breaking them down into short, medium, and long-term scales</a>. Make detailed plans for the next week or two, define general milestones for the next few months, and limit the long term to one or two core principles.</li>
</ul>','Adapting to change is hard if you’re stuck in a habitual pattern. We stay in our “comfort zone” because it’s safe and predictable—but it also holds us back. We’re comfortable with what we know. Learning and growth require more.

Outside the comfort zone, things can get scary. When our situation changes too much or too fast, the comfort zone can vanish along with it, leaving us in a “red zone” of anxiety and panic. That’s when our “fight or flight” instincts take over. Switching to reflex is a good survival skill when facing a rampaging tiger, but not so helpful when we have to adapt our lives and businesses to social distancing or changing market forces.','published',1,'2021-08-24','2021-08-24','2021-08-08',1,7,NULL);
INSERT INTO "blog_post" VALUES(13,'Unlocking Flexnote’s Future','media/blog/posts/images/download_3_aSKwlhW.jpg','unlocking-flexnotes-future-2021-08-24-1711128234030000','<p>It has been three months since my last update in this space, and Evernote has been extraordinarily busy. In September, we were just beginning to roll out our new apps. Now, as we head into the holidays, it&rsquo;s time to report on the product transition we&rsquo;re navigating, and to step back for a clear-eyed accounting of our efforts&mdash;one that reflects what we&rsquo;re seeing in product usage as well as what we&rsquo;re hearing from you.</p>

<p>We have released new apps for all of our core platforms: Mac, Windows, iOS, and Android. Android was the last to release,&nbsp;<a aria-label=" (opens in a new tab)" href="https://evernote.com/blog/new-evernote-android/" rel="noreferrer noopener" target="_blank">beginning its rollout</a>&nbsp;on December 1, limited at this point to devices running Android 10 or newer. We expect to broaden OS version support in the early months of 2021; until then, older Android devices will continue to use the previous generation Evernote app.</p>

<p>While we have made considerable progress in our new apps, rebuilding them from the ground up, the releases have not gone as smoothly as any of us would have liked. Despite an extensive QA process and a long-running beta program, some of our customers have encountered frustrating bugs and performance issues.</p>

<p>In the earliest versions of our releases, for example, some customers saw their notes repeatedly duplicated while they were editing them. Bugs with our iOS share extension tool made clipping content problematic, and the speed and reliability of downloading notes for offline use didn&rsquo;t deliver on your expectations. Likewise, early versions of our Mac and Windows apps exhibited problems with note links, and provided inconsistent access to keyboard shortcuts. Our most advanced power users were quick to report previously unknown bugs, including reports of sporadic sync and performance issues. We moved quickly to fix many of these issues, and we continue to make significant progress with each release, but we recognize that encountering bugs like these is frustrating.</p>

<p>Beyond the bugs, some of our UX and functionality decisions spurred complaints from long-time customers while earning praise from others. Some friction was an unavoidable by-product of our decision to more closely align our design across platforms. As I&rsquo;ve mentioned in our&nbsp;<a aria-label=" (opens in a new tab)" href="https://www.youtube.com/playlist?list=PL4I5cq2DfrSpehLO_71NCjKSZE0nGXIvf" rel="noreferrer noopener" target="_blank">Behind the Scenes videos</a>, Evernote had evolved into five divergent experiences on five different platforms. To reunify the apps and give you a more seamless experience across devices, we had to make hundreds of individual choices about the UX and functionality that formed the basis for the new Evernote. We considered each of these decisions carefully because they meant making tradeoffs&mdash;tradeoffs that had the potential to improve some workflows, while disrupting others.</p>

<p>But possibly more controversial was our decision to roll out the new Mac and Windows apps while still missing features used by some of our most intensive customers. We believed this was the right path because Mac and Windows users dependent on missing features could continue to use (and reinstall if necessary) their&nbsp;<a aria-label=" (opens in a new tab)" href="https://help.evernote.com/hc/articles/360052560314" rel="noreferrer noopener" target="_blank">legacy Evernote Mac or Windows client</a>. Meanwhile, getting the new apps into people&rsquo;s hands now&mdash;even if they only met the needs of 90 percent of our customers&mdash;opened up our ability to iterate quickly, so we could work through the backlog of rebuilding previous</p>','n retrospect, I think we went wrong in failing to set proper expectations with our power users in advance of these releases. If we had increased communication to help our most intensive users evaluate up front whether the new Windows or Mac release was ready for them, I believe we could have avoided much of the dislocation they experienced on exploring the new apps. Nonetheless, launching the new clients into market has enabled us to increase release velocity significantly over the last se','published',1,'2021-08-24','2021-08-24','2021-08-08',1,7,NULL);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0));
INSERT INTO "django_admin_log" VALUES(1,'2021-06-03 05:23:30.283352','1','namra','[{"changed": {"fields": ["First name", "Last name", "Gender"]}}]',1,1,2);
INSERT INTO "django_admin_log" VALUES(2,'2021-06-06 13:12:29.693851','1','namra','[{"changed": {"fields": ["Profile img"]}}]',1,1,2);
INSERT INTO "django_admin_log" VALUES(3,'2021-06-06 13:12:41.761704','2','adil','[{"changed": {"fields": ["Profile img", "Gender"]}}]',1,1,2);
INSERT INTO "django_admin_log" VALUES(4,'2021-06-07 17:23:41.578793','1','example.com','[{"changed": {"fields": ["Display name"]}}]',7,1,2);
INSERT INTO "django_admin_log" VALUES(5,'2021-06-07 17:24:50.286966','1','Super Notes','[{"added": {}}]',11,1,1);
INSERT INTO "django_admin_log" VALUES(6,'2021-06-07 17:59:16.395446','1','Super Notes','[{"changed": {"fields": ["Client id", "Secret key"]}}]',11,1,2);
INSERT INTO "django_admin_log" VALUES(7,'2021-06-08 04:30:52.694078','1','namrah','[]',10,1,2);
INSERT INTO "django_admin_log" VALUES(8,'2021-06-08 04:31:11.692725','3','namrah','[{"changed": {"fields": ["Gender"]}}]',1,1,2);
INSERT INTO "django_admin_log" VALUES(9,'2021-06-08 04:39:35.184991','3','namrah','[]',1,1,2);
INSERT INTO "django_admin_log" VALUES(10,'2021-06-08 05:03:11.106763','3','namrah','[{"changed": {"fields": ["Profile img"]}}]',1,1,2);
INSERT INTO "django_admin_log" VALUES(11,'2021-06-08 05:03:47.452706','3','namrah','[]',1,1,2);
INSERT INTO "django_admin_log" VALUES(12,'2021-06-19 03:58:35.881222','1','Lecture Note','[{"added": {}}]',21,1,1);
INSERT INTO "django_admin_log" VALUES(13,'2021-06-19 03:58:45.002477','2','Project Plan','[{"added": {}}]',21,1,1);
INSERT INTO "django_admin_log" VALUES(14,'2021-06-19 03:58:51.841262','3','Blank Note','[{"added": {}}]',21,1,1);
INSERT INTO "django_admin_log" VALUES(15,'2021-06-19 03:58:58.704396','4','Todo Note','[{"added": {}}]',21,1,1);
INSERT INTO "django_admin_log" VALUES(16,'2021-06-19 03:59:08.826583','5','Meeting Note','[{"added": {}}]',21,1,1);
INSERT INTO "django_admin_log" VALUES(17,'2021-06-19 03:59:17.753664','6','Essay Outline','[{"added": {}}]',21,1,1);
INSERT INTO "django_admin_log" VALUES(18,'2021-06-19 04:00:20.278394','1','Namra''s Notebook','[{"added": {}}]',20,1,1);
INSERT INTO "django_admin_log" VALUES(19,'2021-06-19 04:02:11.052610','1','Unit Testing','[{"added": {}}]',15,1,1);
INSERT INTO "django_admin_log" VALUES(20,'2021-06-19 04:03:10.012538','1','Lecture Note - 1','[{"added": {}}]',22,1,1);
INSERT INTO "django_admin_log" VALUES(21,'2021-06-19 04:59:07.586687','1','namra','[{"changed": {"fields": ["Profile img"]}}]',1,1,2);
INSERT INTO "django_admin_log" VALUES(22,'2021-06-19 05:08:48.777377','1','This is my Blank Note','[{"added": {}}]',13,1,1);
INSERT INTO "django_admin_log" VALUES(23,'2021-06-19 05:09:07.161812','2','Blank Note - 2','[{"added": {}}]',22,1,1);
INSERT INTO "django_admin_log" VALUES(24,'2021-06-19 05:09:42.384085','2','Blank Note - 2','[{"changed": {"fields": ["Object id"]}}]',22,1,2);
INSERT INTO "django_admin_log" VALUES(25,'2021-06-19 05:12:29.474829','1','Memorable dinner with Adiloo','[{"added": {}}]',14,1,1);
INSERT INTO "django_admin_log" VALUES(26,'2021-06-19 05:12:50.000336','3','Essay Outline - 3','[{"added": {}}]',22,1,1);
INSERT INTO "django_admin_log" VALUES(27,'2021-06-19 05:16:01.746380','1','Meeting with Adil','[{"added": {}}]',16,1,1);
INSERT INTO "django_admin_log" VALUES(28,'2021-06-19 05:16:19.299300','4','Meeting Note - 4','[{"added": {}}]',22,1,1);
INSERT INTO "django_admin_log" VALUES(29,'2021-06-19 10:16:57.664984','1','Namra''s Notebook','[{"changed": {"fields": ["Discription"]}}]',20,1,2);
INSERT INTO "django_admin_log" VALUES(30,'2021-06-19 10:17:35.767268','2','My designing Notebook','[{"added": {}}]',20,1,1);
INSERT INTO "django_admin_log" VALUES(31,'2021-06-19 10:18:05.777344','3','My Study Notebook','[{"added": {}}]',20,1,1);
INSERT INTO "django_admin_log" VALUES(32,'2021-06-19 10:19:16.501613','2','golden trip to Istanbul','[{"added": {}}]',14,1,1);
INSERT INTO "django_admin_log" VALUES(33,'2021-06-19 10:20:19.152527','5','Essay Outline - 5','[{"added": {}}]',22,1,1);
INSERT INTO "django_admin_log" VALUES(34,'2021-06-19 10:21:28.252023','2','How to read novels effectively','[{"added": {}}]',15,1,1);
INSERT INTO "django_admin_log" VALUES(35,'2021-06-19 10:21:57.883398','6','Lecture Note - 6','[{"added": {}}]',22,1,1);
INSERT INTO "django_admin_log" VALUES(36,'2021-06-20 07:52:27.326189','3','This is my Blank Note','',15,1,3);
INSERT INTO "django_admin_log" VALUES(37,'2021-06-20 07:53:42.207681','7','Meal Planner','[{"added": {}}]',21,1,1);
INSERT INTO "django_admin_log" VALUES(38,'2021-06-25 12:01:36.026646','1','My 1st diet plan','[{"added": {}}]',24,1,1);
INSERT INTO "django_admin_log" VALUES(39,'2021-06-25 12:03:47.526113','1','Meal Plan from 2021-06-25 12:01:34+00:00 of My 1st diet plan','[{"added": {}}]',23,1,1);
INSERT INTO "django_admin_log" VALUES(40,'2021-06-27 05:27:47.180270','2','Defence Meeting','[{"added": {}}]',16,1,1);
INSERT INTO "django_admin_log" VALUES(41,'2021-06-27 05:29:26.886857','8','Meeting Note - 8','[{"added": {}}]',22,1,1);
INSERT INTO "django_admin_log" VALUES(42,'2021-07-18 05:30:11.953861','3','Sample MealPlanner Note','',24,1,3);
INSERT INTO "django_admin_log" VALUES(43,'2021-07-18 05:30:11.988839','2','Sample MealPlanner Note','',24,1,3);
INSERT INTO "django_admin_log" VALUES(44,'2021-07-18 05:30:12.011826','1','My 1st diet plan','',24,1,3);
INSERT INTO "django_admin_log" VALUES(45,'2021-07-26 08:17:50.692932','1','Sticky Note-1','[{"added": {}}]',26,1,1);
INSERT INTO "django_admin_log" VALUES(46,'2021-08-02 07:10:21.370489','1','My new Diary','[{"added": {}}]',28,1,1);
INSERT INTO "django_admin_log" VALUES(47,'2021-08-14 06:33:37.861711','3','namrah','[]',1,1,2);
INSERT INTO "django_admin_log" VALUES(48,'2021-08-14 06:38:42.894480','1','Programming','[{"added": {}}]',30,1,1);
INSERT INTO "django_admin_log" VALUES(49,'2021-08-14 06:39:12.841385','2','English','[{"added": {}}]',30,1,1);
INSERT INTO "django_admin_log" VALUES(50,'2021-08-14 06:39:17.741259','3','Music','[{"added": {}}]',30,1,1);
INSERT INTO "django_admin_log" VALUES(51,'2021-08-14 06:39:47.968353','4','Books','[{"added": {}}]',30,1,1);
INSERT INTO "django_admin_log" VALUES(52,'2021-08-14 06:43:48.408996','1','How to read a book in a week','[{"added": {}}]',31,1,1);
INSERT INTO "django_admin_log" VALUES(53,'2021-08-14 06:45:04.097737','2','Top 10 songs sing by adil for Namra','[{"added": {}}]',31,1,1);
INSERT INTO "django_admin_log" VALUES(54,'2021-08-14 06:51:06.472927','3','Best books for making good habits','[{"added": {}}]',31,1,1);
INSERT INTO "django_admin_log" VALUES(55,'2021-08-14 15:48:28.082181','2','Top 10 songs sing by adil for Namra','[{"changed": {"fields": ["Image"]}}]',31,1,2);
INSERT INTO "django_admin_log" VALUES(56,'2021-08-14 15:50:02.315575','1','How to read a book in a week','[{"changed": {"fields": ["Image", "Content"]}}]',31,1,2);
INSERT INTO "django_admin_log" VALUES(57,'2021-08-14 16:38:31.200241','1','How to read a book in a week','[{"changed": {"fields": ["Image"]}}]',31,1,2);
INSERT INTO "django_admin_log" VALUES(58,'2021-08-14 16:38:43.888613','1','How to read a book in a week','[{"changed": {"fields": ["Image"]}}]',31,1,2);
INSERT INTO "django_admin_log" VALUES(59,'2021-08-14 16:39:54.308189','1','How to read a book in a week','[{"changed": {"fields": ["Content"]}}]',31,1,2);
INSERT INTO "django_admin_log" VALUES(60,'2021-08-14 16:40:20.775819','1','How to read a book in a week','[{"changed": {"fields": ["Content"]}}]',31,1,2);
INSERT INTO "django_admin_log" VALUES(61,'2021-08-14 16:40:45.498962','1','How to read a book in a week','[{"changed": {"fields": ["Content"]}}]',31,1,2);
INSERT INTO "django_admin_log" VALUES(62,'2021-08-14 18:48:52.504083','3','Music','',30,1,3);
INSERT INTO "django_admin_log" VALUES(63,'2021-08-14 18:48:52.527084','2','English','',30,1,3);
INSERT INTO "django_admin_log" VALUES(64,'2021-08-14 18:48:52.544073','1','Programming','',30,1,3);
INSERT INTO "django_admin_log" VALUES(65,'2021-08-14 18:49:30.965184','5','Flexnote News','[{"added": {}}]',30,1,1);
INSERT INTO "django_admin_log" VALUES(66,'2021-08-14 18:50:29.910963','6','Using Flexnote','[{"added": {}}]',30,1,1);
INSERT INTO "django_admin_log" VALUES(67,'2021-08-14 18:50:52.974451','7','Flexnote Tech','[{"added": {}}]',30,1,1);
INSERT INTO "django_admin_log" VALUES(68,'2021-08-14 18:51:05.206387','8','Everything','[{"added": {}}]',30,1,1);
INSERT INTO "django_admin_log" VALUES(69,'2021-08-14 18:57:08.371477','4','Save the Files You Need More Easily With Import Folders','[{"added": {}}]',31,1,1);
INSERT INTO "django_admin_log" VALUES(70,'2021-08-14 19:05:44.334600','5','Introducing the New Flexnote for Windows and Mac','[{"added": {}}]',31,1,1);
INSERT INTO "django_admin_log" VALUES(71,'2021-08-14 19:11:57.300523','6','Your Essential Guide to Going Remote','[{"added": {}}]',31,1,1);
INSERT INTO "django_admin_log" VALUES(72,'2021-08-14 19:15:03.117980','7','Protecting Customer Data on GCP','[{"added": {}}]',31,1,1);
INSERT INTO "django_admin_log" VALUES(73,'2021-08-14 19:20:27.240661','8','The Best Office Isn’t a Building, It’s a Space','[{"added": {}}]',31,1,1);
INSERT INTO "django_admin_log" VALUES(74,'2021-08-14 19:24:30.206102','9','4 Simple Ways to Break Your Bad Habits','[{"added": {}}]',31,1,1);
INSERT INTO "django_admin_log" VALUES(75,'2021-08-14 19:26:34.379466','10','Why Journaling Is Good for Your Mental Health','[{"added": {}}]',31,1,1);
INSERT INTO "django_admin_log" VALUES(76,'2021-08-14 19:30:23.332287','5','Introducing the New Flexnote for Windows and Mac','[{"changed": {"fields": ["Content"]}}]',31,1,2);
INSERT INTO "django_admin_log" VALUES(77,'2021-08-16 12:58:25.124103','7','Meal Planner','[{"changed": {"fields": ["Icon class"]}}]',21,1,2);
INSERT INTO "django_admin_log" VALUES(78,'2021-08-16 12:59:41.700494','6','Essay Outline','[{"changed": {"fields": ["Icon class"]}}]',21,1,2);
INSERT INTO "django_admin_log" VALUES(79,'2021-08-16 13:00:25.163355','5','Meeting Note','[{"changed": {"fields": ["Icon class"]}}]',21,1,2);
INSERT INTO "django_admin_log" VALUES(80,'2021-08-16 13:01:05.098231','4','Todo Note','[{"changed": {"fields": ["Icon class"]}}]',21,1,2);
INSERT INTO "django_admin_log" VALUES(81,'2021-08-16 13:02:25.530947','3','Blank Note','[{"changed": {"fields": ["Icon class"]}}]',21,1,2);
INSERT INTO "django_admin_log" VALUES(82,'2021-08-16 13:03:11.773794','2','Project Plan','[{"changed": {"fields": ["Icon class"]}}]',21,1,2);
INSERT INTO "django_admin_log" VALUES(83,'2021-08-16 13:04:29.522484','1','Lecture Note','[{"changed": {"fields": ["Icon class"]}}]',21,1,2);
INSERT INTO "django_admin_log" VALUES(84,'2021-08-17 19:48:14.441800','6','My new meal planner','[{"changed": {"fields": ["Title", "Week"]}}]',24,1,2);
INSERT INTO "django_admin_log" VALUES(85,'2021-08-17 19:48:21.710535','5','Sample MealPlanner Note','[{"changed": {"fields": ["Week"]}}]',24,1,2);
INSERT INTO "django_admin_log" VALUES(86,'2021-08-17 19:48:25.432008','4','Sample MealPlanner Note','[{"changed": {"fields": ["Week"]}}]',24,1,2);
INSERT INTO "django_admin_log" VALUES(87,'2021-08-17 19:51:54.529430','3','wsdf','',13,1,3);
INSERT INTO "django_admin_log" VALUES(88,'2021-08-17 19:56:27.378203','14','Meeting Note - 14','',22,1,3);
INSERT INTO "django_admin_log" VALUES(89,'2021-08-17 20:00:14.142326','19','Lecture Note - 19','',22,1,3);
INSERT INTO "django_admin_log" VALUES(90,'2021-08-17 20:00:14.158378','18','Blank Note - 18','',22,1,3);
INSERT INTO "django_admin_log" VALUES(91,'2021-08-18 17:57:29.501822','3','Sample Essay','[]',14,1,2);
INSERT INTO "django_admin_log" VALUES(92,'2021-08-19 09:42:58.406899','1','My Diary','[{"changed": {"fields": ["Title"]}}]',28,1,2);
INSERT INTO "django_admin_log" VALUES(93,'2021-08-24 05:24:20.323802','5','abc','',1,1,3);
INSERT INTO "django_admin_log" VALUES(94,'2021-08-24 05:24:20.339855','4','ajlal','',1,1,3);
INSERT INTO "django_admin_log" VALUES(95,'2021-08-24 09:52:21.040232','1','My Diary','[]',28,1,2);
INSERT INTO "django_admin_log" VALUES(96,'2021-08-24 09:52:41.214700','10','DiaryPage object (10)','',29,1,3);
INSERT INTO "django_admin_log" VALUES(97,'2021-08-24 09:53:09.145105','12','DiaryPage object (12)','[{"added": {}}]',29,1,1);
INSERT INTO "django_admin_log" VALUES(98,'2021-08-24 09:53:22.616359','12','DiaryPage object (12)','[{"changed": {"fields": ["Page no"]}}]',29,1,2);
INSERT INTO "django_admin_log" VALUES(99,'2021-08-24 09:53:43.447229','13','DiaryPage object (13)','[{"added": {}}]',29,1,1);
INSERT INTO "django_admin_log" VALUES(100,'2021-08-24 09:54:11.428125','12','DiaryPage object (12)','[{"changed": {"fields": ["Page no"]}}]',29,1,2);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
INSERT INTO "django_content_type" VALUES(1,'accounts','account');
INSERT INTO "django_content_type" VALUES(2,'admin','logentry');
INSERT INTO "django_content_type" VALUES(3,'auth','permission');
INSERT INTO "django_content_type" VALUES(4,'auth','group');
INSERT INTO "django_content_type" VALUES(5,'contenttypes','contenttype');
INSERT INTO "django_content_type" VALUES(6,'sessions','session');
INSERT INTO "django_content_type" VALUES(7,'sites','site');
INSERT INTO "django_content_type" VALUES(8,'account','emailaddress');
INSERT INTO "django_content_type" VALUES(9,'account','emailconfirmation');
INSERT INTO "django_content_type" VALUES(10,'socialaccount','socialaccount');
INSERT INTO "django_content_type" VALUES(11,'socialaccount','socialapp');
INSERT INTO "django_content_type" VALUES(12,'socialaccount','socialtoken');
INSERT INTO "django_content_type" VALUES(13,'notes','blanknote');
INSERT INTO "django_content_type" VALUES(14,'notes','essayoutline');
INSERT INTO "django_content_type" VALUES(15,'notes','lecturenote');
INSERT INTO "django_content_type" VALUES(16,'notes','meetingnote');
INSERT INTO "django_content_type" VALUES(17,'notes','projectplan');
INSERT INTO "django_content_type" VALUES(18,'notes','todoitem');
INSERT INTO "django_content_type" VALUES(19,'notes','todonote');
INSERT INTO "django_content_type" VALUES(20,'notes','notebook');
INSERT INTO "django_content_type" VALUES(21,'notes','notetype');
INSERT INTO "django_content_type" VALUES(22,'notes','note');
INSERT INTO "django_content_type" VALUES(23,'notes','daymeal');
INSERT INTO "django_content_type" VALUES(24,'notes','mealplanner');
INSERT INTO "django_content_type" VALUES(25,'notes','trash');
INSERT INTO "django_content_type" VALUES(26,'notes','stickynote');
INSERT INTO "django_content_type" VALUES(27,'django_cron','cronjoblog');
INSERT INTO "django_content_type" VALUES(28,'notes','diary');
INSERT INTO "django_content_type" VALUES(29,'notes','diarypage');
INSERT INTO "django_content_type" VALUES(30,'blog','category');
INSERT INTO "django_content_type" VALUES(31,'blog','post');
INSERT INTO "django_content_type" VALUES(32,'taggit','tag');
INSERT INTO "django_content_type" VALUES(33,'taggit','taggeditem');
INSERT INTO "django_content_type" VALUES(34,'notes','sharednote');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "django_cron_cronjoblog" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "code" varchar(64) NOT NULL, "start_time" datetime NOT NULL, "end_time" datetime NOT NULL, "is_success" bool NOT NULL, "message" text NOT NULL, "ran_at_time" time NULL);
INSERT INTO "django_cron_cronjoblog" VALUES(1,'notes.my_cron_job','2021-07-29 07:00:44.398899','2021-07-29 07:00:44.461224',1,'',NULL);
INSERT INTO "django_cron_cronjoblog" VALUES(2,'notes.my_cron_job','2021-07-29 07:03:01.198760','2021-07-29 07:03:01.250732',1,'',NULL);
INSERT INTO "django_cron_cronjoblog" VALUES(3,'notes.my_cron_job','2021-07-29 07:08:15.234683','2021-07-29 07:08:15.289131',1,'',NULL);
INSERT INTO "django_cron_cronjoblog" VALUES(4,'notes.MyCronJob','2021-07-29 07:10:41.459872','2021-07-29 07:10:41.519837',1,'',NULL);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO "django_migrations" VALUES(1,'contenttypes','0001_initial','2021-06-03 05:20:46.778319');
INSERT INTO "django_migrations" VALUES(2,'contenttypes','0002_remove_content_type_name','2021-06-03 05:20:46.809187');
INSERT INTO "django_migrations" VALUES(3,'auth','0001_initial','2021-06-03 05:20:46.871152');
INSERT INTO "django_migrations" VALUES(4,'auth','0002_alter_permission_name_max_length','2021-06-03 05:20:46.899136');
INSERT INTO "django_migrations" VALUES(5,'auth','0003_alter_user_email_max_length','2021-06-03 05:20:46.924995');
INSERT INTO "django_migrations" VALUES(6,'auth','0004_alter_user_username_opts','2021-06-03 05:20:46.946961');
INSERT INTO "django_migrations" VALUES(7,'auth','0005_alter_user_last_login_null','2021-06-03 05:20:46.966998');
INSERT INTO "django_migrations" VALUES(8,'auth','0006_require_contenttypes_0002','2021-06-03 05:20:46.980317');
INSERT INTO "django_migrations" VALUES(9,'auth','0007_alter_validators_add_error_messages','2021-06-03 05:20:47.009303');
INSERT INTO "django_migrations" VALUES(10,'auth','0008_alter_user_username_max_length','2021-06-03 05:20:47.036285');
INSERT INTO "django_migrations" VALUES(11,'auth','0009_alter_user_last_name_max_length','2021-06-03 05:20:47.061273');
INSERT INTO "django_migrations" VALUES(12,'auth','0010_alter_group_name_max_length','2021-06-03 05:20:47.090255');
INSERT INTO "django_migrations" VALUES(13,'auth','0011_update_proxy_permissions','2021-06-03 05:20:47.131231');
INSERT INTO "django_migrations" VALUES(14,'auth','0012_alter_user_first_name_max_length','2021-06-03 05:20:47.152389');
INSERT INTO "django_migrations" VALUES(15,'accounts','0001_initial','2021-06-03 05:20:47.194976');
INSERT INTO "django_migrations" VALUES(16,'admin','0001_initial','2021-06-03 05:20:47.268938');
INSERT INTO "django_migrations" VALUES(17,'admin','0002_logentry_remove_auto_add','2021-06-03 05:20:47.306916');
INSERT INTO "django_migrations" VALUES(18,'admin','0003_logentry_add_action_flag_choices','2021-06-03 05:20:47.360885');
INSERT INTO "django_migrations" VALUES(19,'sessions','0001_initial','2021-06-03 05:20:47.443839');
INSERT INTO "django_migrations" VALUES(20,'account','0001_initial','2021-06-07 17:20:09.251677');
INSERT INTO "django_migrations" VALUES(21,'account','0002_email_max_length','2021-06-07 17:20:09.326637');
INSERT INTO "django_migrations" VALUES(22,'sites','0001_initial','2021-06-07 17:20:09.388598');
INSERT INTO "django_migrations" VALUES(23,'sites','0002_alter_domain_unique','2021-06-07 17:20:09.414592');
INSERT INTO "django_migrations" VALUES(24,'socialaccount','0001_initial','2021-06-07 17:20:09.514178');
INSERT INTO "django_migrations" VALUES(25,'socialaccount','0002_token_max_lengths','2021-06-07 17:20:09.591138');
INSERT INTO "django_migrations" VALUES(26,'socialaccount','0003_extra_data_default_dict','2021-06-07 17:20:09.630123');
INSERT INTO "django_migrations" VALUES(27,'accounts','0002_alter_account_profile_img','2021-06-08 04:48:53.860150');
INSERT INTO "django_migrations" VALUES(28,'accounts','0003_alter_account_profile_img','2021-06-08 04:56:29.436459');
INSERT INTO "django_migrations" VALUES(29,'accounts','0004_alter_account_profile_img','2021-06-08 04:57:51.845221');
INSERT INTO "django_migrations" VALUES(30,'account','0003_auto_20210608_1010','2021-06-08 05:10:24.213351');
INSERT INTO "django_migrations" VALUES(31,'socialaccount','0004_auto_20210608_1010','2021-06-08 05:10:24.337280');
INSERT INTO "django_migrations" VALUES(32,'accounts','0005_alter_account_profile_img','2021-06-08 05:23:53.115074');
INSERT INTO "django_migrations" VALUES(33,'accounts','0006_alter_account_profile_img','2021-06-08 06:40:17.865403');
INSERT INTO "django_migrations" VALUES(34,'notes','0001_initial','2021-06-18 12:46:30.454574');
INSERT INTO "django_migrations" VALUES(35,'notes','0002_notebook_discription','2021-06-19 10:15:44.623449');
INSERT INTO "django_migrations" VALUES(36,'notes','0003_note_trashed','2021-06-20 04:48:20.527695');
INSERT INTO "django_migrations" VALUES(37,'notes','0004_trash','2021-06-20 05:04:42.898543');
INSERT INTO "django_migrations" VALUES(38,'notes','0005_alter_meetingnote_date_time','2021-07-18 05:16:11.879652');
INSERT INTO "django_migrations" VALUES(39,'notes','0006_auto_20210726_1230','2021-07-26 07:30:30.968135');
INSERT INTO "django_migrations" VALUES(40,'notes','0007_auto_20210726_1315','2021-07-26 08:15:37.539697');
INSERT INTO "django_migrations" VALUES(41,'notes','0008_alter_meetingnote_date_time','2021-07-29 06:21:15.978833');
INSERT INTO "django_migrations" VALUES(42,'django_cron','0001_initial','2021-07-29 06:55:13.475430');
INSERT INTO "django_migrations" VALUES(43,'django_cron','0002_remove_max_length_from_CronJobLog_message','2021-07-29 06:55:13.515409');
INSERT INTO "django_migrations" VALUES(44,'notes','0009_auto_20210802_1206','2021-08-02 07:06:54.327717');
INSERT INTO "django_migrations" VALUES(45,'taggit','0001_initial','2021-08-14 05:48:49.716327');
INSERT INTO "django_migrations" VALUES(46,'taggit','0002_auto_20150616_2121','2021-08-14 05:48:49.753365');
INSERT INTO "django_migrations" VALUES(47,'taggit','0003_taggeditem_add_unique_index','2021-08-14 05:48:49.783349');
INSERT INTO "django_migrations" VALUES(48,'blog','0001_initial','2021-08-14 05:48:49.852079');
INSERT INTO "django_migrations" VALUES(49,'notes','0010_auto_20210816_1754','2021-08-16 12:54:51.078196');
INSERT INTO "django_migrations" VALUES(50,'notes','0011_auto_20210820_1508','2021-08-20 10:08:41.832904');
INSERT INTO "django_migrations" VALUES(51,'notes','0012_alter_meetingnote_date_time','2021-08-21 13:33:25.905009');
INSERT INTO "django_migrations" VALUES(52,'notes','0013_alter_meetingnote_date_time','2021-08-21 13:55:32.007928');
INSERT INTO "django_migrations" VALUES(53,'notes','0014_sharednote','2021-08-22 18:25:44.079667');
INSERT INTO "django_migrations" VALUES(54,'django_cron','0003_alter_cronjoblog_id','2021-08-23 11:43:49.312016');
INSERT INTO "django_migrations" VALUES(55,'notes','0015_auto_20210823_1738','2021-08-23 12:38:50.514774');
INSERT INTO "django_migrations" VALUES(56,'blog','0002_alter_post_claps','2021-08-24 17:06:43.218493');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
INSERT INTO "django_session" VALUES('cvj4fsxaaaadooghgjqpfyvfjz8yvdpq','.eJxVjDsOwjAQRO_iGlmO_6akzxms9a6DA8iW4qRC3J1ESgHFNPPezJtF2NYSt56XOBO7Mskuv10CfOZ6AHpAvTeOra7LnPih8JN2PjbKr9vp_h0U6GVfu4yEwimwEPY4pU2aKAcl3SQH0Mlb9ESYDHgpFHqvzGBlEkDaUnDs8wX-ljgy:1lpsUk:-qLt9RP-jgV_9yzt4q6_kSUo2WYbM_5phtggClT9a38','2021-06-20 13:07:14.619967');
INSERT INTO "django_session" VALUES('yjhxsrz8p6y4x8xaolfonmj3uhjv1o2y','eyJzb2NpYWxhY2NvdW50X3N0YXRlIjpbeyJwcm9jZXNzIjoibG9naW4iLCJzY29wZSI6IiIsImF1dGhfcGFyYW1zIjoiIn0sInIzU01vRWxySmU5WSJdfQ:1lqKGT:Lzdqx75MnoXp1QXfOWTCmekxBu2gJnrbCttGE28fd1c','2021-06-21 18:46:21.499815');
INSERT INTO "django_session" VALUES('sxzdbcoslh31fmn0h75azof8fqcducnt','.eJxVjDsOwjAQRO_iGkVO1l86uIi1Xq_liMiRiF0h7k6CUkA5b2beSwTsrYS-8TPMSVwFiMsvi0gPrkeBy3LgAYnWXtvw3Zz1Ntz2xLXNhG1e6_18_akKbmX3RGscZAVs0CipXQbjpFKTR9LAPmUYs5cYPVuGyUky0Vit7YgxAUxavD-gbDuW:1lqVfX:PjYEjEWrSLZbb7JSLzBWmHcIFEqxpHlyDeh34f1VPy8','2021-06-22 06:56:59.585117');
INSERT INTO "django_session" VALUES('g6txnv5ozsdvtgmeoz62s3oq0c1fkm9e','.eJxVjMsOwiAQRf-FtSHUmfJw6b7fQAYYpGogKe3K-O_apAvd3nPOfQlP21r81nnxcxIXMYjT7xYoPrjuIN2p3pqMra7LHOSuyIN2ObXEz-vh_h0U6uVbR8RzhJCRA4PShrUml9HyCEDaWUVKU47JKOUABs2Z0JpAgUdEYBTvD-tIOAE:1luTMz:wnz49YK8mUeId6QWuLgpwYl_Rqi4zE_7Eb1H71IwoXk','2021-07-03 05:18:13.454822');
INSERT INTO "django_session" VALUES('77tm6sjjeomzqo6gspey68ut9x5l3icr','.eJxVjMsOwiAQRf-FtSHUmfJw6b7fQAYYpGogKe3K-O_apAvd3nPOfQlP21r81nnxcxIXMYjT7xYoPrjuIN2p3pqMra7LHOSuyIN2ObXEz-vh_h0U6uVbR8RzhJCRA4PShrUml9HyCEDaWUVKU47JKOUABs2Z0JpAgUdEYBTvD-tIOAE:1m4FXr:5Vr1e9Bb2DInNUSLx30afFRdkanXwIyDQo0Th2vYjHM','2021-07-30 04:33:51.114991');
INSERT INTO "django_session" VALUES('4ug21h5x00o5c867e0ahf4agasbwaj1o','.eJxVjMsOwiAQRf-FtSHUmfJw6b7fQAYYpGogKe3K-O_apAvd3nPOfQlP21r81nnxcxIXMYjT7xYoPrjuIN2p3pqMra7LHOSuyIN2ObXEz-vh_h0U6uVbR8RzhJCRA4PShrUml9HyCEDaWUVKU47JKOUABs2Z0JpAgUdEYBTvD-tIOAE:1m4zHk:WPrDk1_0YbgtfQPDGnOkBunk9L-k0HhVPRB-tEak_CU','2021-08-01 05:24:16.571339');
INSERT INTO "django_session" VALUES('w46bhgkq2ifzqxrs6zr4xr2szx0l3t48','.eJxVjMsOwiAQRf-FtSHUmfJw6b7fQAYYpGogKe3K-O_apAvd3nPOfQlP21r81nnxcxIXMYjT7xYoPrjuIN2p3pqMra7LHOSuyIN2ObXEz-vh_h0U6uVbR8RzhJCRA4PShrUml9HyCEDaWUVKU47JKOUABs2Z0JpAgUdEYBTvD-tIOAE:1m4zMn:LA6AYlMTFulEDNhSr8jA9JVdcF4Witxzhl-ca6OX84A','2021-08-01 05:29:29.021520');
INSERT INTO "django_session" VALUES('fyzr4ijpmhp22pqk6i1ayv10e1kp5l1s','.eJxVjMsOwiAQRf-FtSHUmfJw6b7fQAYYpGogKe3K-O_apAvd3nPOfQlP21r81nnxcxIXMYjT7xYoPrjuIN2p3pqMra7LHOSuyIN2ObXEz-vh_h0U6uVbR8RzhJCRA4PShrUml9HyCEDaWUVKU47JKOUABs2Z0JpAgUdEYBTvD-tIOAE:1m5SNf:FUl_a6C1NgSc0XqyPhrKo6Xd-L1TGqh4cXkkXUQH6vM','2021-08-02 12:28:19.391198');
INSERT INTO "django_session" VALUES('dtbcxs14hzldjzudo9ohu258ucm8l8n3','.eJxVjMsOwiAQRf-FtSHUmfJw6b7fQAYYpGogKe3K-O_apAvd3nPOfQlP21r81nnxcxIXMYjT7xYoPrjuIN2p3pqMra7LHOSuyIN2ObXEz-vh_h0U6uVbR8RzhJCRA4PShrUml9HyCEDaWUVKU47JKOUABs2Z0JpAgUdEYBTvD-tIOAE:1m7vTV:iOz2JbY_3vi1ZN5-3oNdeiWSDHBPNN9uGiH5LJYp4kc','2021-08-09 07:56:33.101944');
INSERT INTO "django_session" VALUES('ib4tcnb9tm2hdjdhew6p2sao0rcvgtm2','.eJxVjMsOwiAQRf-FtSHUmfJw6b7fQAYYpGogKe3K-O_apAvd3nPOfQlP21r81nnxcxIXMYjT7xYoPrjuIN2p3pqMra7LHOSuyIN2ObXEz-vh_h0U6uVbR8RzhJCRA4PShrUml9HyCEDaWUVKU47JKOUABs2Z0JpAgUdEYBTvD-tIOAE:1m7vmg:4UUCaoT-abvFn1015KIse9wKsCIXu990FmDB2Sa9PMk','2021-08-09 08:16:22.821396');
INSERT INTO "django_session" VALUES('m13l0od5ygrc60i71it83m3js1rf8ank','.eJxVjMsOwiAQRf-FtSHUmfJw6b7fQAYYpGogKe3K-O_apAvd3nPOfQlP21r81nnxcxIXMYjT7xYoPrjuIN2p3pqMra7LHOSuyIN2ObXEz-vh_h0U6uVbR8RzhJCRA4PShrUml9HyCEDaWUVKU47JKOUABs2Z0JpAgUdEYBTvD-tIOAE:1mAS50:MpYje9lLF3FkLMsYNDjVQlg1Sb3wtw-YjjCav-0Ae34','2021-08-16 07:09:42.177349');
INSERT INTO "django_session" VALUES('lu3eh303p640jzjzi0ccbhbluhwpg0cs','.eJxVjEEOwiAQRe_C2pAiBQaX7nsGAjODVA0kpV0Z765NutDtf-_9lwhxW0vYOi9hJnERZ3H63VLEB9cd0D3WW5PY6rrMSe6KPGiXUyN-Xg_376DEXr614pzAeuu9Z2UsECCiB8iAeiRtEFPmbDkph-xGqwYaSKNBT9pBcuL9AfpjOJU:1mHsJL:m_L2MHgts6Sy8wnldoC7QUq3rNAZCq00bvj4ordJ3W8','2021-09-05 18:35:11.964544');
INSERT INTO "django_session" VALUES('0vsoa4yoj7q4b3h9p33k7w4v0xbi9tpq','.eJxVjMEOwiAQRP-FsyG0pQt49N5vILuwSNVAUtqT8d9tkx70Npn3Zt7C47ZmvzVe_BzFVXTi8tsRhieXA8QHlnuVoZZ1mUkeijxpk1ON_Lqd7t9Bxpb39RiCdjwQa2WtRaURDDEgaeAYht4B74E19gaUsUrxkCImimkM1nUgPl_5rTie:1mIT5y:nFO0msHuGfUpy_CqA7KGLikMIF7K1KysNqDQap6Zv7w','2021-09-07 09:51:50.677115');
INSERT INTO "django_session" VALUES('gqh0fzgzzrhizepqe9emg6yc9kjbbyli','.eJxVjMEOwiAQRP-FsyG0pQt49N5vILuwSNVAUtqT8d9tkx70Npn3Zt7C47ZmvzVe_BzFVXTi8tsRhieXA8QHlnuVoZZ1mUkeijxpk1ON_Lqd7t9Bxpb39RiCdjwQa2WtRaURDDEgaeAYht4B74E19gaUsUrxkCImimkM1nUgPl_5rTie:1mIamN:dO3DyT4_2bcPECyUE4Vs0RorVxDzpQ1Ni53Q2ftliDs','2021-09-07 18:04:07.536410');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "django_site" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(50) NOT NULL, "domain" varchar(100) NOT NULL UNIQUE);
INSERT INTO "django_site" VALUES(1,'Super Notes','example.com');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_blanknote" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(300) NOT NULL, "text_content" text NOT NULL);
INSERT INTO "notes_blanknote" VALUES(1,'This is my Blank Note','<p>sawrhsetj fgjdrtfyj xdhdrjtdryi56i67i5ue</p>');
INSERT INTO "notes_blanknote" VALUES(6,'Benefits of reading','<h2>1. Mental Stimulation</h2>

<p>Studies have shown that staying mentally stimulated can slow the progress of (or possibly even prevent) Alzheimer&rsquo;s and Dementia,<sup id="footnote_plugin_tooltip_1" onclick="if (!window.__cfRLUnblockHandlers) return false; footnote_moveToAnchor(''footnote_plugin_reference_1'');">[1]</sup>&nbsp;since keeping your brain active and engaged prevents it from losing power.</p>

<p>Just like any other muscle in the body, the brain requires exercise to keep it strong and healthy, so the phrase &ldquo;use it or lose it&rdquo; is particularly apt when it comes to your mind. Doing puzzles and playing games such as chess have also been found to be helpful with cognitive stimulation.<sup id="footnote_plugin_tooltip_2" onclick="if (!window.__cfRLUnblockHandlers) return false; footnote_moveToAnchor(''footnote_plugin_reference_2'');">[2]</sup></p>

<h2>2. Stress Reduction</h2>

<p>No matter how much stress&nbsp;you have at work, in your personal relationships, or countless other issues faced in daily life, it all just slips away when you lose yourself in a great story. A well-written novel can transport you to other realms, while an engaging article will distract you and keep you in the present moment, letting tensions drain away and allowing you to relax.</p>

<h2>3. Knowledge</h2>

<p style="text-align: center;"><img alt="" src="/media/uploads/namra/2021/08/24/pngtree-five-books-image_1318860.jpg" style="width: 560px; height: 421px;" /></p>

<p>Everything you read fills your head with new bits of information, and you never know when it might come in handy. The more knowledge you have, the better-equipped you are to tackle any challenge you&rsquo;ll ever face.</p>

<p>Additionally, here&rsquo;s a bit of food for thought: should you ever find yourself in dire circumstances, remember that although you might lose everything else&mdash;your job, your possessions, your money, even your health&mdash;knowledge can never be taken from you.</p>

<h2>4. Vocabulary Expansion</h2>

<p>This goes with the above topic:</p>

<p>The more you read, the more words you gain exposure to, and they&rsquo;ll inevitably make their way into your everyday vocabulary.</p>

<p>Being articulate and well-spoken is of great help in any profession, and knowing that you can speak to higher-ups with self-confidence can be an enormous boost to your self-esteem. It could even aid in your career, as those who are well-read, well-spoken, and knowledgeable on a variety of topics tend to get promotions more quickly (and more often) than those with smaller vocabularies and lack of awareness of literature, scientific breakthroughs, and global events.</p>

<p>Reading books is also vital for learning&nbsp;<a href="https://www.lifehack.org/articles/productivity/6-ways-to-simplify-your-foreign-language-learning.html">new languages</a>, as non-native speakers gain exposure to words used in context, which will ameliorate their own speaking and writing fluency.</p>');
INSERT INTO "notes_blanknote" VALUES(7,'Notes-taking app','<p>Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.vNote-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.vNote-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.vvvNote-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.</p>');
INSERT INTO "notes_blanknote" VALUES(8,'Python Objects and Classes','<h1>Python Objects and Classes</h1>

<p>Python is an object-oriented programming language. Unlike procedure-oriented programming, where the main emphasis is on functions, object-oriented programming stresses on objects.</p>

<p>An object is simply a collection of data (variables) and methods (functions) that act on those data. Similarly, a class is a blueprint for that object.</p>

<p>We can think of a class as a sketch (prototype) of a house. It contains all the details about the floors, doors, windows, etc. Based on these descriptions we build the house. House is the object.</p>

<p>As many houses can be made from a house&#39;s blueprint, we can create many objects from a class. An object is also called an instance of a class and the process of creating this object is called&nbsp;<strong>instantiation</strong>.</p>

<hr />
<h2 id="define">Defining a Class in Python</h2>

<p>Like function definitions begin with the&nbsp;<a href="https://www.programiz.com/python-programming/keyword-list#def">def</a>&nbsp;keyword in Python, class definitions begin with a&nbsp;<a href="https://www.programiz.com/python-programming/keyword-list#class">class</a>&nbsp;keyword.</p>

<p>The first string inside the class is called docstring and has a brief description of the class. Although not mandatory, this is highly recommended.</p>

<p>Here is a simple class definition.</p>

<pre>
<code>class MyNewClass:
    ''''''This is a docstring. I have created a new class''''''
    pass</code></pre>

<p>A class creates a new local&nbsp;<a href="https://www.programiz.com/python-programming/namespace">namespace</a>&nbsp;where all its attributes are defined. Attributes may be data or functions.</p>

<p>There are also special attributes in it that begins with double underscores&nbsp;<code>__</code>. For example,&nbsp;<code>__doc__</code>&nbsp;gives us the docstring of that class.</p>

<p>As soon as we define a class, a new class object is created with the same name. This class object allows us to access the different attributes as well as to instantiate new objects of that class.</p>

<pre>
<code>class Person:
    "This is a person class"
    age = 10

    def greet(self):
        print(''Hello'')


# Output: 10
print(Person.age)

# Output: &lt;function Person.greet&gt;
print(Person.greet)

# Output: "This is a person class"
print(Person.__doc__)</code></pre>

<p><strong>Output</strong></p>

<pre>
<samp>10
&lt;function Person.greet at 0x7fc78c6e8160&gt;
This is a person class</samp></pre>

<hr />
<h2 id="create">Creating an Object in Python</h2>

<p>We saw that the class object could be used to access different attributes.</p>

<p>It can also be used to create new object instances (instantiation) of that class. The procedure to create an object is similar to a&nbsp;<a href="https://www.programiz.com/python-programming/function">function</a>&nbsp;call.</p>

<pre>
<code>&gt;&gt;&gt; harry = Person()</code></pre>

<p>This will create a new object instance named&nbsp;<var>harry</var>. We can access the attributes of objects using the object name prefix.</p>

<p>Attributes may be data or method. Methods of an object are corresponding functions of that class.</p>

<p>This means to say, since&nbsp;<code>Person.greet</code>&nbsp;is a function object (attribute of class),&nbsp;<code>Person.greet</code>&nbsp;will be a method object.</p>

<pre>
<code>class Person:
    "This is a person class"
    age = 10

    def greet(self):
        print(''Hello'')


# create a new object of Person class
harry = Person()

# Output: &lt;function Person.greet&gt;
print(Person.greet)

# Output: &lt;bound method Person.greet of &lt;__main__.Person object&gt;&gt;
print(harry.greet)

# Calling object''s greet() method
# Output: Hello
harry.greet()</code></pre>

<p><strong>Output</strong></p>

<pre>
<samp>&lt;function Person.greet at 0x7fd288e4e160&gt;
&lt;bound method Person.greet of &lt;__main__.Person object at 0x7fd288e9fa30&gt;&gt;
Hello</samp>
</pre>

<p>You may have noticed the&nbsp;<code>self</code>&nbsp;parameter in function definition inside the class but we called the method simply as&nbsp;<code>harry.greet()</code>&nbsp;without any&nbsp;<a href="https://www.programiz.com/python-programming/function-argument">arguments</a>. It still worked.</p>

<p>This is because, whenever an object calls its method, the object itself is passed as the first argument. So,&nbsp;<code>harry.greet()</code>&nbsp;translates into&nbsp;<code>Person.greet(harry)</code>.</p>

<p>In general, calling a method with a list of n arguments is equivalent to calling the corresponding function with an argument list that is created by inserting the method&#39;s object before the first argument.</p>

<p>For these reasons, the first argument of the function in class must be the object itself. This is conventionally called&nbsp;<var>self</var>. It can be named otherwise but we highly recommend to follow the convention.</p>

<p>Now you must be familiar with class object, instance object, function object, method object and their differences.</p>

<hr />
<h2 id="constructor">Constructors in Python</h2>

<p>Class functions that begin with double underscore&nbsp;<code>__</code>&nbsp;are called special functions as they have special meaning.</p>

<p>Of one particular interest is the&nbsp;<code>__init__()</code>&nbsp;function. This special function gets called whenever a new object of that class is instantiated.</p>

<p>This type of function is also called constructors in Object Oriented Programming (OOP). We normally use it to initialize all the variables.</p>

<pre>
<code>class ComplexNumber:
    def __init__(self, r=0, i=0):
        self.real = r
        self.imag = i

    def get_data(self):
        print(f''{self.real}+{self.imag}j'')


# Create a new ComplexNumber object
num1 = ComplexNumber(2, 3)

# Call get_data() method
# Output: 2+3j
num1.get_data()

# Create another ComplexNumber object
# and create a new attribute ''attr''
num2 = ComplexNumber(5)
num2.attr = 10

# Output: (5, 0, 10)
print((num2.real, num2.imag, num2.attr))

# but c1 object doesn''t have attribute ''attr''
# AttributeError: ''ComplexNumber'' object has no attribute ''attr''
print(num1.attr)</code></pre>

<p><strong>Output</strong></p>

<pre>
<samp>2+3j
(5, 0, 10)
Traceback (most recent call last):
  File &quot;&lt;string&gt;&quot;, line 27, in &lt;module&gt;
    print(num1.attr)
AttributeError: &#39;ComplexNumber&#39; object has no attribute &#39;attr&#39;</samp></pre>

<p>In the above example, we defined a new class to represent complex numbers. It has two functions,&nbsp;<code>__init__()</code>&nbsp;to initialize the variables (defaults to zero) and&nbsp;<code>get_data()</code>&nbsp;to display the number properly.</p>

<p>An interesting thing to note in the above step is that attributes of an object can be created on the fly. We created a new attribute&nbsp;<var>attr</var>&nbsp;for object&nbsp;<var>num2</var>&nbsp;and read it as well. But this does not create that attribute for object&nbsp;<var>num1</var>.</p>

<hr />
<h2 id="delete">Deleting Attributes and Objects</h2>

<p>Any attribute of an object can be deleted anytime, using the&nbsp;<code>del</code>&nbsp;statement. Try the following on the Python shell to see the output.</p>

<pre>
<code>&gt;&gt;&gt; num1 = ComplexNumber(2,3)
&gt;&gt;&gt; del num1.imag
&gt;&gt;&gt; num1.get_data()
Traceback (most recent call last):
...
AttributeError: ''ComplexNumber'' object has no attribute ''imag''

&gt;&gt;&gt; del ComplexNumber.get_data
&gt;&gt;&gt; num1.get_data()
Traceback (most recent call last):
...
AttributeError: ''ComplexNumber'' object has no attribute ''get_data''</code></pre>');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_daymeal" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "breakfast" varchar(100) NOT NULL, "lunch" varchar(100) NOT NULL, "dinner" varchar(100) NOT NULL, "mealplanner_id" bigint NOT NULL REFERENCES "notes_mealplanner" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO "notes_daymeal" VALUES(17,'Juice','Vegitables','Chicken',8);
INSERT INTO "notes_daymeal" VALUES(18,'Green Tea','Fries','Vegitables',8);
INSERT INTO "notes_daymeal" VALUES(19,'Black tea with cake','Russian Salad','Rice',8);
INSERT INTO "notes_daymeal" VALUES(20,'Juice','Vegitables','Chiken',8);
INSERT INTO "notes_daymeal" VALUES(21,'Apple','Burger','Pizza',8);
INSERT INTO "notes_daymeal" VALUES(22,'Green Tea','Macrooni','Chick rolls',8);
INSERT INTO "notes_daymeal" VALUES(23,'Mango','Vegitables','Potatos',8);
INSERT INTO "notes_daymeal" VALUES(24,'Juice','Vegitables','Chicken',9);
INSERT INTO "notes_daymeal" VALUES(25,'Green Tea','Fries','Vegitables',9);
INSERT INTO "notes_daymeal" VALUES(26,'Black tea with cake','Russian Salad','Rice',9);
INSERT INTO "notes_daymeal" VALUES(27,'Juice','Vegitables','Chiken',9);
INSERT INTO "notes_daymeal" VALUES(28,'Apple','Burger','Pizza',9);
INSERT INTO "notes_daymeal" VALUES(29,'Green Tea','Macrooni','Chick rolls',9);
INSERT INTO "notes_daymeal" VALUES(30,'Mango','Vegitables','Potatos',9);
INSERT INTO "notes_daymeal" VALUES(31,'Juice','Vegitables','Chicken',12);
INSERT INTO "notes_daymeal" VALUES(32,'Green Tea','Fries','Vegitables',12);
INSERT INTO "notes_daymeal" VALUES(33,'Black tea with cake','Russian Salad','Rice',12);
INSERT INTO "notes_daymeal" VALUES(34,'Juice','Vegitables','Chiken',12);
INSERT INTO "notes_daymeal" VALUES(35,'Apple','Burger','Pizza',12);
INSERT INTO "notes_daymeal" VALUES(36,'Green Tea','Macrooni','Chick rolls',12);
INSERT INTO "notes_daymeal" VALUES(37,'Mango','Vegitables','Potatos',12);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_diary" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(200) NOT NULL, "user_id" bigint NOT NULL UNIQUE REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO "notes_diary" VALUES(1,'My Diary',1);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_diarypage" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "text" text NOT NULL, "page_no" integer unsigned NULL CHECK ("page_no" >= 0), "date_created" datetime NOT NULL, "date_updated" datetime NOT NULL, "diary_id" bigint NOT NULL REFERENCES "notes_diary" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO "notes_diarypage" VALUES(12,'This is my personal diary.',1,'2021-08-24 09:53:09.140109','2021-08-24 09:54:11.425131',1);
INSERT INTO "notes_diarypage" VALUES(13,'This is 2nd page of my diary.',2,'2021-08-24 09:53:43.441267','2021-08-24 09:53:43.441267',1);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_essayoutline" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(300) NOT NULL, "body" text NOT NULL, "conclusion" text NOT NULL, "introduction" text NOT NULL);
INSERT INTO "notes_essayoutline" VALUES(1,'Memorable dinner with Adiloo','namra eated alot of food hahah.. she is soo fat and chubby but sexy hahahha .. I love namra soo much','At the end of the dinner we kissed each other on the lips hjahaha','These moments were the golden moments of my life. for the first time we met with each other . we saw each other face to face.');
INSERT INTO "notes_essayoutline" VALUES(2,'golden trip to Istanbul','Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo','Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo','Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo');
INSERT INTO "notes_essayoutline" VALUES(7,'Essay on Life','<ol>
	<li><strong>Disproportional impact of COVID-19&nbsp;</strong>
	<ol>
		<li>As the COVID-19 virus made its way throughout the United States, testing kits were distributed equally among labs across the 50 states, without consideration of population density or actual needs for testing in those states.</li>
		<li>An opportunity to stop the spread of the virus during its early stages was missed, with serious consequences for many Americans</li>
		<li>Although there is a dearth of race-disaggregated data on the number of people tested, the data that are available highlight African Americans&rsquo; overall lack of access to testing. For example, in Kansas, as of June 27, according to the COVID Racial Data Tracker, out of 94,780 tests, only 4,854 were from black Americans and 50,070 were from whites</li>
	</ol>
	</li>
	<li><strong>Social determinants of health and the pandemic&rsquo;s impact</strong>
	<ol>
		<li>In international human rights law, the right to health is a claim to a set of social arrangements&mdash;norms, institutions, laws, and enabling environment&mdash;that can best secure the enjoyment of this right</li>
		<li>The International Covenant on Economic, Social and Cultural Rights sets out the core provision relating to the right to health under international law.&nbsp;The United Nations Committee on Economic, Social and Cultural Rights is the body responsible for interpreting the covenant.&nbsp;In 2000, the committee adopted a general comment on the right to health recognizing that the right to health is closely related to and dependent on the realization of other human rights</li>
		<li>In spite of growing interest in understanding the association between the social determinants of health and health outcomes, for a long time many academics, policy makers, elected officials, and others were reluctant to identify racism as one of the root causes of racial health inequities</li>
	</ol>
	</li>
	<li><strong>Addressing the impact of COVID-19</strong>
	<ol>
		<li>The racially disparate death rate and socioeconomic impact of the COVID-19 pandemic and the discriminatory enforcement of pandemic-related restrictions stand in stark contrast to the United States&rsquo; commitment to eliminate all forms of racial discrimination.</li>
		<li>&nbsp;In 1965, the United States signed the International Convention on the Elimination of All Forms of Racial Discrimination, which it ratified in 1994. Article 2 of the convention contains fundamental obligations of state parties.</li>
		<li>Perhaps this crisis will not only greatly affect the health of our most vulnerable community members but also focus public attention on their rights and safety&mdash;or lack thereof. Disparate COVID-19 mortality rates among the African American population reflect longstanding inequalities rooted in systemic and pervasive problems in the United States (for example, racism and the inadequacy of the country&rsquo;s health care system).</li>
	</ol>
	</li>
</ol>','<ol>
	<li>A deeper understanding of the social determinants of health in the context of the current crisis, and of the role that these factors play in mediating the impact of the COVID-19 pandemic on African Americans&rsquo; health outcomes, increases our awareness of the indivisibility of all human rights and the collective dimension of the right to health. We need a more explicit equity agenda that encompasses both formal and substantive equality.&nbsp;Besides nondiscrimination and equality, participation and accountability are equally crucial.</li>
	<li>
	<p>This current public health crisis demonstrates that we are all interconnected and that our well-being is contingent on that of others. A renewed and healthy society is possible only if governments and public authorities commit to reducing vulnerability and the impact of ill-health by taking steps to respect, protect, and fulfill the right to health.&nbsp;It requires that government and nongovernment actors establish policies and programs that promote the right to health in practice.&nbsp;It calls for a shared commitment to justice and equality for all.</p>
	</li>
</ol>','<ol>
	<li>We all have been affected by the current COVID-19 pandemic. However, the impact of the pandemic and its consequences are felt differently depending on our status as individuals and as members of society</li>
	<li>COVID-19 is killing people on a large scale. As of October 10, 2020, more than 7.7 million people across every state in the United States and its four territories had tested positive for COVID-19</li>
</ol>');
INSERT INTO "notes_essayoutline" VALUES(8,'The Disproportional Impact of COVID-19','<ol>
	<li><strong><strong>Disproportional impact of COVID-19</strong></strong>
	<ul>
		<li>As the COVID-19 virus made its way throughout the United States, testing kits were distributed equally among labs across the 50 states, without consideration of population density or actual needs for testing in those states.</li>
		<li>An opportunity to stop the spread of the virus during its early stages was missed, with serious consequences for many Americans.</li>
		<li>Although there is a dearth of race-disaggregated data on the number of people tested, the data that are available highlight African Americans&rsquo; overall lack of access to testing. For example, in Kansas, as of June 27, according to the COVID Racial Data Tracker, out of 94,780 tests, only 4,854 were from black Americans and 50,070 were from whites.</li>
	</ul>
	</li>
	<br />
	<li><strong><strong>Social determinants of health and the pandemic&rsquo;s impact</strong></strong>
	<ul>
		<li>In international human rights law, the right to health is a claim to a set of social arrangements&mdash;norms, institutions, laws, and enabling environment&mdash;that can best secure the enjoyment of this right.</li>
		<li>The International Covenant on Economic, Social and Cultural Rights sets out the core provision relating to the right to health under international law.&nbsp;The United Nations Committee on Economic, Social and Cultural Rights is the body responsible for interpreting the covenant.&nbsp;In 2000, the committee adopted a general comment on the right to health recognizing that the right to health is closely related to and dependent on the realization of other human rights.</li>
		<li>In spite of growing interest in understanding the association between the social determinants of health and health outcomes, for a long time many academics, policy makers, elected officials, and others were reluctant to identify racism as one of the root causes of racial health inequities.</li>
	</ul>
	</li>
	<br />
	<li><strong><strong>Addressing the impact of COVID-19</strong></strong>
	<ul>
		<li>The racially disparate death rate and socioeconomic impact of the COVID-19 pandemic and the discriminatory enforcement of pandemic-related restrictions stand in stark contrast to the United States&rsquo; commitment to eliminate all forms of racial discrimination.</li>
		<li>In 1965, the United States signed the International Convention on the Elimination of All Forms of Racial Discrimination, which it ratified in 1994. Article 2 of the convention contains fundamental obligations of state parties.</li>
		<li>Perhaps this crisis will not only greatly affect the health of our most vulnerable community members but also focus public attention on their rights and safety&mdash;or lack thereof. Disparate COVID-19 mortality rates among the African American population reflect longstanding inequalities rooted in systemic and pervasive problems in the United States (for example, racism and the inadequacy of the country&rsquo;s health care system).</li>
	</ul>
	</li>
</ol>','<ol>
	<li>A deeper understanding of the social determinants of health in the context of the current crisis, and of the role that these factors play in mediating the impact of the COVID-19 pandemic on African Americans&rsquo; health outcomes, increases our awareness of the indivisibility of all human rights and the collective dimension of the right to health. We need a more explicit equity agenda that encompasses both formal and substantive equality.&nbsp;Besides nondiscrimination and equality, participation and accountability are equally crucial.</li>
	<li>
	<p>This current public health crisis demonstrates that we are all interconnected and that our well-being is contingent on that of others. A renewed and healthy society is possible only if governments and public authorities commit to reducing vulnerability and the impact of ill-health by taking steps to respect, protect, and fulfill the right to health.&nbsp;It requires that government and nongovernment actors establish policies and programs that promote the right to health in practice.&nbsp;It calls for a shared commitment to justice and equality for all.</p>
	</li>
</ol>','<ol>
	<li>We all have been affected by the current COVID-19 pandemic. However, the impact of the pandemic and its consequences are felt differently depending on our status as individuals and as members of society.</li>
	<li>COVID-19 is killing people on a large scale. As of October 10, 2020, more than 7.7 million people across every state in the United States and its four territories had tested positive for COVID-19.</li>
</ol>');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_lecturenote" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(300) NOT NULL, "course" varchar(300) NOT NULL, "date" datetime NOT NULL, "professor" varchar(300) NOT NULL, "text_content" text NOT NULL, "summary" text NOT NULL);
INSERT INTO "notes_lecturenote" VALUES(2,'How to read novels effectively','Reading Skills','2021-06-19 10:21:28.250024','Namra Raheem','<p>Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo</p>','Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with AdilooMemorable dinner with Adiloo Memorable dinner with Adiloo Memorable dinner with Adiloo Memorable d');
INSERT INTO "notes_lecturenote" VALUES(4,'This is my Blank Note','Reading Skills','2021-06-20 07:52:46.454424','Adil Saleem','<p>kdcdcd</p>','dasdcdvc');
INSERT INTO "notes_lecturenote" VALUES(7,'Database Security','Information Security','2021-08-24 06:05:53.042290','Mam Samreena','<div style="text-align: center;"><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000"><span style="font-weight:bold">Database Security </span></span></span></span></small></div>

<div style="text-align: center;">&nbsp;</div>

<div style="text-align: center;"><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000"><span style="font-weight:bold"><img alt="" src="/media/uploads/namra/2021/08/24/download-5.jpg" style="width: 501px; height: 278px;" /></span></span></span></span></small></div>

<div style="text-align: center;">&nbsp;</div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000"><span style="font-weight:bold">What is a Threat? </span></span></span></span></small></div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Any situation or event, whether intentionally or incidentally, can </span></span></span></small></div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">cause damage, which can reflect an adverse effect on the database structure and, consequently the organization. A threat may occur by a </span></span></span></small></div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">situation or event involving a person or the action or situations that are </span></span></span></small></div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">probably to bring harm to an organization and its database.</span></span></span></small></div>

<div>&nbsp;</div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000"><span style="font-weight:bold">What is Database Security? </span></span></span></span></small></div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Database security is the technique that protects and secures the </span></span></span></small></div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">database against intentional or accidental loss / threats.&nbsp;We&nbsp;consider </span></span></span></small></div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">database&nbsp;security about the following situations: </span></span></span></small></div>

<div>&nbsp;</div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Accidental Loss: </span></span></span></small></div>

<ul>
	<li><small><span style="font-size:15.95pt"><span style="font-family:Calibri"><span style="color:#000000">By human being mistakes. </span></span></span></small></li>
	<li><small><span style="font-size:15.95pt"><span style="font-family:Calibri"><span style="color:#000000">Hardware Failure. </span></span></span></small></li>
	<li><small><span style="font-size:15.95pt"><span style="font-family:Calibri"><span style="color:#000000">Incorrect Data formatting. </span></span></span></small></li>
	<li><small><span style="font-size:15.95pt"><span style="font-family:Calibri"><span style="color:#000000">Enviromental Change </span></span></span></small></li>
</ul>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Intentional Loss: </span></span></span></small></div>

<ul>
	<li><small><span style="font-size:9.95pt"><span style="font-family:Symbol"><span style="color:#000000">&nbsp; </span></span></span><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Theft and fraudulent. </span></span></span></small></li>
	<li><small><span style="font-size:9.95pt"><span style="font-family:Symbol"><span style="color:#000000">&nbsp;</span></span></span><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Loss of confidentiality or secrecy. </span></span></span></small></li>
	<li><small><span style="font-size:9.95pt"><span style="font-family:Symbol"><span style="color:#000000">&nbsp;</span></span></span><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Loss of data privacy. </span></span></span></small></li>
	<li><small><span style="font-size:9.95pt"><span style="font-family:Symbol"><span style="color:#000000">&nbsp;</span></span></span><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Loss of data integrity. </span></span></span></small></li>
	<li><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Loss of availability of data.</span></span></span></small></li>
</ul>

<p>&nbsp;</p>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000"><span style="font-weight:bold">Techniques of Database Security </span></span></span></span></small></div>

<div><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Following techniques are used in the Database security: </span></span></span></small></div>

<ul>
	<li><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Access control. </span></span></span></small></li>
	<li><small><span style="font-size:9.95pt"><span style="font-family:Symbol"><span style="color:#000000">&nbsp;</span></span></span><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Password Protection </span></span></span></small></li>
	<li><small><span style="font-size:9.95pt"><span style="font-family:Symbol"><span style="color:#000000">&nbsp;</span></span></span><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Auditing. </span></span></span></small></li>
	<li><small><span style="font-size:9.95pt"><span style="font-family:Symbol"><span style="color:#000000">&nbsp;</span></span></span><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Authentication. </span></span></span></small></li>
	<li><small><span style="font-size:9.95pt"><span style="font-family:Symbol"><span style="color:#000000">&nbsp;</span></span></span><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Encryption. </span></span></span></small></li>
	<li><small><span style="font-size:9.95pt"><span style="font-family:Symbol"><span style="color:#000000">&nbsp;</span></span></span><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Integrity controls. </span></span></span></small></li>
	<li><small><span style="font-size:9.95pt"><span style="font-family:Symbol"><span style="color:#000000">&nbsp;</span></span></span><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Backups. </span></span></span></small></li>
	<li><small><span style="font-size:15.95pt"><span style="font-family:Times New Roman"><span style="color:#000000">Application <span style="font-weight:bold">security</span></span></span></span></small></li>
</ul>','Application security is the process of making apps more secure by finding, fixing, and enhancing the security of apps. Much of this happens during the development phase, but it includes tools and methods to protect apps once they are deployed. This is becoming more important as hackers increasingly.');
INSERT INTO "notes_lecturenote" VALUES(8,'Classification','Data Mining','2021-08-24 08:33:53.152944','Qazi','<p>This isy my new lecture note and today we are going to study about love .This isy my new lecture note and today we are going to study about love .This isy my new lecture note and today we are going to study about love .This isy my new lecture note and today we are going to study about love .This isy my new lecture note and today we are going to study about love .This isy my new lecture note and today we are going to study about love .This isy my new lecture note and today we are going to study about love .This isy my new lecture note and today we are going to study about love .</p>','This isy my new lecture note and today we are going to study about love .This isy my new lecture note and today we are going to study about love .This isy my new lecture note and today we are going to study about love .');
INSERT INTO "notes_lecturenote" VALUES(9,'Database Security','Information Security','2021-08-24 14:07:05.454981','Mam Samreena','<p align="center" style="text-align:center"><span style="font-size:11pt"><span style="background:#ffffff"><span style="line-height:150%"><span style="font-family:Calibri"><b><u>&nbsp;</u></b><b><u><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%"><span style="font-weight:bold"><span style="text-decoration:underline"><span style="text-underline:single">Database Security</span></span></span></span></span></span></u></b></span></span></span></span></p>

<p align="center" style="text-align:center">&nbsp;</p>

<p align="center" style="text-align:center"><span style="font-size:11pt"><span style="background:#ffffff"><span style="line-height:150%"><span style="font-family:Calibri"><b><u><span style="font-size:11.0000pt"><span style="font-family:''Times New Roman''"><span style="font-weight:bold"><span style="text-decoration:underline"><span style="text-underline:single"><img alt="" src="/media/uploads/namra/2021/08/24/download-5_o7UFk0C.jpg" style="width: 501px; height: 278px;" /></span></span></span></span></span></u></b></span></span></span></span></p>

<p><span style="font-size:11pt"><span style="background:#ffffff"><span style="line-height:150%"><span style="font-family:Calibri"><b><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%"><span style="font-weight:bold">What is a Threat?</span></span></span></span></b></span></span></span></span></p>

<p align="justify" class="p" style="text-indent:36.0000pt; text-align:justify"><span style="font-size:12pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:&quot;Times New Roman&quot;"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Any situation or event, whether intentionally or incidentally, can cause damage, which can reflect an adverse effect on the database structure and, consequently the organization. A threat may occur by a situation or event involving a person or the action or situations that are probably to bring harm to an organization and its database.</span></span></span></span></span></span></span></p>

<p align="justify" style="text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><b><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%"><span style="font-weight:bold">What is Database Security?</span></span></span></span></b></span></span></span></span></span></p>

<p align="justify" style="text-indent:36.0000pt; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Database security is the technique that protects and secures the database against intentional or accidental loss / threats.</span></span></span></span></span></span></span></span></p>

<p align="justify" style="text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">We consider database security about the following situations:</span></span></span></span></span></span></span></span></p>

<ul>
	<li align="justify" style="margin-left:8px; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Theft and fraudulent.</span></span></span></span></span></span></span></span></li>
	<li align="justify" style="margin-left:8px; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Loss of confidentiality or secrecy.</span></span></span></span></span></span></span></span></li>
	<li align="justify" style="margin-left:8px; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Loss of data privacy.</span></span></span></span></span></span></span></span></li>
	<li align="justify" style="margin-left:8px; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Loss of data integrity.</span></span></span></span></span></span></span></span></li>
	<li align="justify" style="margin-left:8px; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Loss of availability of data.</span></span></span></span></span></span></span></span></li>
</ul>

<p align="justify" style="text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><b><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%"><span style="font-weight:bold">Techniques of Database Security</span></span></span></span></b></span></span></span></span></span></p>

<p align="justify" style="text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Following techniques are used in the Database security:</span></span></span></span></span></span></span></span></p>

<ul>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Access control.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Password Protection</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Auditing.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Authentication.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Encryption.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Integrity controls.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Backups.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Application&nbsp;</span></span><b><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="font-weight:bold">security</span></span></span></b><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">.</span></span></span></span></span></li>
</ul>','Application security is the process of making apps more secure by finding, fixing, and enhancing the security of apps. Much of this happens during the development phase, but it includes tools and methods to protect apps once they are deployed. This is becoming more important as hackers increasingly.');
INSERT INTO "notes_lecturenote" VALUES(10,'Database Security','Information Security','2021-08-24 14:10:12.675948','Mam Samreena','<p align="center" style="text-align:center"><span style="font-size:11pt"><span style="background:#ffffff"><span style="line-height:150%"><span style="font-family:Calibri"><b><u>&nbsp;</u></b><b><u><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%"><span style="font-weight:bold"><span style="text-decoration:underline"><span style="text-underline:single">Database Security</span></span></span></span></span></span></u></b></span></span></span></span></p>

<p align="center" style="text-align:center">&nbsp;</p>

<p align="center" style="text-align:center"><span style="font-size:11pt"><span style="background:#ffffff"><span style="line-height:150%"><span style="font-family:Calibri"><b><u><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%"><span style="font-weight:bold"><span style="text-decoration:underline"><span style="text-underline:single"><img alt="" src="/media/uploads/namra/2021/08/24/download-5_DqDNnGz.jpg" style="width: 501px; height: 278px;" /></span></span></span></span></span></span></u></b></span></span></span></span></p>

<p align="center" style="text-align:center">&nbsp;</p>

<p><span style="font-size:11pt"><span style="background:#ffffff"><span style="line-height:150%"><span style="font-family:Calibri"><b><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%"><span style="font-weight:bold">What is a Threat?</span></span></span></span></b></span></span></span></span></p>

<p align="justify" class="p" style="text-indent:36.0000pt; text-align:justify"><span style="font-size:12pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:&quot;Times New Roman&quot;"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Any situation or event, whether intentionally or incidentally, can cause damage, which can reflect an adverse effect on the database structure and, consequently the organization. A threat may occur by a situation or event involving a person or the action or situations that are probably to bring harm to an organization and its database.</span></span></span></span></span></span></span></p>

<p align="justify" style="text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><b><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%"><span style="font-weight:bold">What is Database Security?</span></span></span></span></b></span></span></span></span></span></p>

<p align="justify" style="text-indent:36.0000pt; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Database security is the technique that protects and secures the database against intentional or accidental loss / threats.</span></span></span></span></span></span></span></span></p>

<p align="justify" style="text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">We consider database security about the following situations:</span></span></span></span></span></span></span></span></p>

<ul>
	<li align="justify" style="margin-left:8px; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Theft and fraudulent.</span></span></span></span></span></span></span></span></li>
	<li align="justify" style="margin-left:8px; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Loss of confidentiality or secrecy.</span></span></span></span></span></span></span></span></li>
	<li align="justify" style="margin-left:8px; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Loss of data privacy.</span></span></span></span></span></span></span></span></li>
	<li align="justify" style="margin-left:8px; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Loss of data integrity.</span></span></span></span></span></span></span></span></li>
	<li align="justify" style="margin-left:8px; text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Loss of availability of data.</span></span></span></span></span></span></span></span></li>
</ul>

<p align="justify" style="text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><b><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%"><span style="font-weight:bold">Techniques of Database Security</span></span></span></span></b></span></span></span></span></span></p>

<p align="justify" style="text-align:justify"><span style="font-size:11pt"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-family:Calibri"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="line-height:150%">Following techniques are used in the Database security:</span></span></span></span></span></span></span></span></p>

<ul>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Access control.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Password Protection</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Auditing.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Authentication.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Encryption.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Integrity controls.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Backups.</span></span></span></span></span></li>
	<li align="justify" class="16" style="text-align:justify"><span style="background:#ffffff"><span style="text-justify:inter-ideograph"><span style="line-height:150%"><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">Application&nbsp;</span></span><b><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''"><span style="font-weight:bold">security</span></span></span></b><span style="font-size:12.0000pt"><span style="font-family:''Times New Roman''">.</span></span></span></span></span></li>
</ul>','Application security is the process of making apps more secure by finding, fixing, and enhancing the security of apps. Much of this happens during the development phase, but it includes tools and methods to protect apps once they are deployed. This is becoming more important as hackers increasingly.');
INSERT INTO "notes_lecturenote" VALUES(11,'Classification','Data Mining','2021-08-24 16:29:07.420489','Sir Qazi','<p>Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.</p>','Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.Note-taking is the practice of recording information from different sources and platforms');
INSERT INTO "notes_lecturenote" VALUES(12,'Object Oriented Programming','Python','2021-08-25 04:20:35.466432','Sir Javed Iqbal','<h2>​​​​​​​The __init__() Function</h2>

<p>The examples above are classes and objects in their simplest form, and are not really useful in real life applications.</p>

<p>To understand the meaning of classes we have to understand the built-in __init__() function.</p>

<p>All classes have a function called __init__(), which is always executed when the class is being initiated.</p>

<p>Use the __init__() function to assign values to object properties, or other operations that are necessary to do when the object is being created:</p>

<h3><strong>Example</strong></h3>

<p>Create a class named Person, use the __init__() function to assign values for name and age:</p>

<p><span style="background-color:#dddddd;">class&nbsp;Person:</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;def&nbsp;__init__(self, name, age):</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;&nbsp;&nbsp;self.name = name</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;&nbsp; self.age = age</span><br />
<br />
<span style="background-color:#dddddd;">p1 = Person(&quot;John&quot;,&nbsp;36)</span><br />
<br />
<span style="background-color:#dddddd;">print(p1.name)</span><br />
<span style="background-color:#dddddd;">print(p1.age)</span></p>

<h2>Object Methods</h2>

<p>Objects can also contain methods. Methods in objects are functions that belong to the object.</p>

<p>Let us create a method in the Person class:</p>

<h3><strong>Example</strong></h3>

<p>Insert a function that prints a greeting, and execute it on the p1 object:</p>

<p><span style="background-color:#dddddd;">class&nbsp;Person:</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;def&nbsp;__init__(self, name, age):</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;&nbsp;&nbsp;self.name = name</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;&nbsp; self.age = age</span><br />
<br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;def&nbsp;myfunc(self):</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;Hello my name is &quot;&nbsp;+ self.name)</span><br />
<br />
<span style="background-color:#dddddd;">p1 = Person(&quot;John&quot;,&nbsp;36)</span><br />
<span style="background-color:#dddddd;">p1.myfunc()</span></p>

<p>&nbsp;</p>

<h2>The self Parameter</h2>

<p>The&nbsp;<code>self</code>&nbsp;parameter is a reference to the current instance of the class, and is used to access variables that belongs to the class.</p>

<p>It does not have to be named&nbsp;<code>self</code>&nbsp;, you can call it whatever you like, but it has to be the first parameter of any function in the class:</p>

<h3><strong>Example</strong></h3>

<p>Use the words&nbsp;<em>mysillyobject</em>&nbsp;and&nbsp;<em>abc</em>&nbsp;instead of&nbsp;<em>self</em>:</p>

<p><span style="background-color:#dddddd;">class&nbsp;Person:</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;def&nbsp;__init__(mysillyobject, name, age):</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;&nbsp;&nbsp;mysillyobject.name = name</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;&nbsp; mysillyobject.age = age</span><br />
<br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;def&nbsp;myfunc(abc):</span><br />
<span style="background-color:#dddddd;">&nbsp;&nbsp;&nbsp;&nbsp;print(&quot;Hello my name is &quot;&nbsp;+ abc.name)</span><br />
<br />
<span style="background-color:#dddddd;">p1 = Person(&quot;John&quot;,&nbsp;36)</span><br />
<span style="background-color:#dddddd;">p1.myfunc()</span></p>

<h2>Delete Object Properties</h2>

<p>You can delete properties on objects by using the&nbsp;<code>del</code>&nbsp;keyword:</p>

<h3><strong>Example</strong></h3>

<p>Delete the age property from the p1 object:</p>

<p><span style="background-color:#dddddd;">del&nbsp;p1.age</span></p>','Python is a great programming language that supports OOP. You will use it to define a class with attributes and methods, which you will then call. Python offers a number of benefits compared to other programming languages like Java, C++ or R. It''s a dynamic language, with high-level data types.');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_mealplanner" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(300) NOT NULL, "week" datetime NULL);
INSERT INTO "notes_mealplanner" VALUES(4,'Sample MealPlanner Note','2021-08-17 19:48:24');
INSERT INTO "notes_mealplanner" VALUES(8,'My Meal Planner','2021-08-23 19:00:00');
INSERT INTO "notes_mealplanner" VALUES(9,'Meal Planner','2021-08-23 19:00:00');
INSERT INTO "notes_mealplanner" VALUES(10,'Diet Plan','2021-08-24 19:00:00');
INSERT INTO "notes_mealplanner" VALUES(11,'Diet Plan','2021-08-24 19:00:00');
INSERT INTO "notes_mealplanner" VALUES(12,'Diet Plan','2021-08-24 19:00:00');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_meetingnote" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(300) NOT NULL, "date_time" datetime NOT NULL, "goal" varchar(300) NOT NULL, "attendees" text NOT NULL, "agenda" text NOT NULL, "notes" text NOT NULL);
INSERT INTO "notes_meetingnote" VALUES(5,'Meeting Note','2021-08-23 19:00:00','Discuss agency performance and decide whether to renew for another year.','<ul>
	<li>Namrah Raheem</li>
	<li>Laiba Maqsood</li>
	<li>Nayab Fatima</li>
	<li>Hamail Tehreem</li>
</ul>','<ul>
	<li>Review agency performance to date and compare against benchmarks</li>
	<li>Discussion: Does missing benchmarks warrant a change? Is it worth the costs?</li>
	<li>Decision: Should we renew with them for another year</li>
	<li>Decision making.</li>
	<li>Strategic planning.</li>
	<li>Information sharing.</li>
</ul>','<p><strong>The more prepared you are for your next meeting, the better the meeting is going to go.</strong>&nbsp;Meetings with agendas tend to finish earlier than meetings without them.</p>

<p>Plus, good meeting agendas promote engagement and participation in the meeting.</p>

<p>Our research found that agenda usage was a meeting practice that correlates with being&nbsp;<a href="https://www.hugo.team/downloadable-resources/research-meeting-practices-productivity-and-team-culture">happier and more productive</a>&nbsp;overall.</p>

<p><img alt="" src="/media/uploads/namra/2021/08/24/3030861-poster-p-2-3030861-why-women-fail-to-speak-up-at-high-level-meetings-and-what-everyone-can-do-about-it.jpg" style="width: 620px; height: 349px;" /></p>

<p>&nbsp;</p>

<h3>1. Think &ldquo;participants&rdquo; not &ldquo;audience&rdquo;.</h3>

<p>Knowing your audience is always important, but when it comes to company-wide meetings, think of your employees as &ldquo;participants&rdquo;. Engage employees in a conversation that happens over time. Consider some of the following tactics to involve employees in a two-way dialogue rather than a top-down approach:</p>

<ul>
	<li><strong>Crowd-source your agenda topics.</strong>&nbsp;Allow employees to shape the internal discussion in a transparent way by asking them to submit and vote on issues most important to them. This gives leaders a sense of what&rsquo;s really on the minds of employees and creates a forum for the most important issues to rise to the surface.</li>
	<li><strong>Invite customers as guest speakers.</strong>&nbsp;Connecting day-to-day work to the customer experience is one of the &lsquo;stickiest&rsquo; ways to engage employees. Hearing customers share their success story provides a big energy boost and gives employees a first-hand look at the impact they&rsquo;re making in the world.</li>
	<li><strong>Spotlight individuals.</strong>&nbsp;People love recognition for good work. Taking time to share individual (or team) successes lets employees connect to great work happening in other parts of the company.</li>
	<li><strong>Provide a clear call to action.</strong>&nbsp;End each meeting with a specific call to action. Company-wide meetings often focus on high-level business updates with leaders encouraging employees to take risks, fail fast, or focus on execution. Rather than a vague ask, give them something tangible, i.e. take the survey, or pose a question that encourages follow up conversation among managers and teams.</li>
</ul>

<h3>2. Develop a strong partnership with your IT team.</h3>

<p>You spend time planning and developing your content; make sure all your in-room and remote participants can fully experience it. Engage with your IT team early in the planning process. Give them an up-front seat at the table so they can understand overall meeting objectives and help navigate the technical landscape. Here are some issues to discuss to avoid common IT hiccups during virtual meetings:</p>

<ul>
	<li>Network bandwidth capacity &ndash; can it handle your audio/video content?</li>
	<li>Is your physical room equipped to deliver a virtual meeting experience (e.g., microphones, amplified sound)?</li>
	<li>What clear instructions will participants need for seamless log-in? What platforms are recommended for optimum viewing?</li>
	<li>Who will participants reach out to if they experience technical issues during the meeting?</li>
</ul>

<h3>3. Sweat the small stuff &ndash; the details matter.</h3>

<p>Your company-wide meeting, whether quarterly, monthly or weekly, is your spotlight moment to showcase your executive team, demonstrate cohesiveness, and deliver a compelling message that keeps your employee base engaged in the company&rsquo;s direction, mission and vision. Everything from the pre-meeting invitation to the post-meeting water cooler conversation speaks volumes about the culture of your company and the state of business. Careful planning and close attention to detail will pay off. Sometimes you need to sweat the small stuff in order to deliver a meeting with big impact.</p>');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_note" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "slug" varchar(300) NULL UNIQUE, "object_id" integer unsigned NOT NULL CHECK ("object_id" >= 0), "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "note_book_id" bigint NOT NULL REFERENCES "notes_notebook" ("id") DEFERRABLE INITIALLY DEFERRED, "note_type_id" bigint NOT NULL REFERENCES "notes_notetype" ("id") DEFERRABLE INITIALLY DEFERRED, "trashed" bool NULL, "date_created" datetime NOT NULL, "date_updated" datetime NOT NULL);
INSERT INTO "notes_note" VALUES(43,'my-notebook-2021-08-24-1403497355730000',7,15,6,1,1,'2021-08-24 06:05:53.056248','2021-08-24 14:03:49.735573');
INSERT INTO "notes_note" VALUES(44,'my-notebook-2021-08-24-0631463573010000',7,17,6,2,0,'2021-08-24 06:31:46.357301','2021-08-24 06:31:46.357301');
INSERT INTO "notes_note" VALUES(45,'my-notebook-2021-08-24-1402353711220000',8,15,6,1,1,'2021-08-24 08:33:53.176233','2021-08-24 14:02:35.371122');
INSERT INTO "notes_note" VALUES(46,'my-notebook-2021-08-24-1631131923980000',9,15,6,1,1,'2021-08-24 14:07:05.468619','2021-08-24 16:31:13.192398');
INSERT INTO "notes_note" VALUES(47,'my-notebook-2021-08-24-1410126899430000',10,15,6,1,0,'2021-08-24 14:10:12.689943','2021-08-24 14:10:12.689943');
INSERT INTO "notes_note" VALUES(48,'my-notebook-2021-08-24-1422465174010000',6,13,6,3,0,'2021-08-24 14:22:46.517401','2021-08-24 14:22:46.517401');
INSERT INTO "notes_note" VALUES(49,'my-notebook-2021-08-24-1425224647740000',10,19,6,4,0,'2021-08-24 14:25:22.464774','2021-08-24 14:25:22.464774');
INSERT INTO "notes_note" VALUES(50,'my-notebook-2021-08-24-1459524167020000',5,16,6,5,0,'2021-08-24 14:59:52.417702','2021-08-24 14:59:52.417702');
INSERT INTO "notes_note" VALUES(51,'my-notebook-2021-08-24-1555186330810000',7,14,6,6,1,'2021-08-24 15:49:30.149144','2021-08-24 15:55:18.633081');
INSERT INTO "notes_note" VALUES(52,'my-notebook-2021-08-24-1609343519820000',8,14,6,6,0,'2021-08-24 16:09:34.351982','2021-08-24 16:09:34.351982');
INSERT INTO "notes_note" VALUES(53,'my-notebook-2021-08-24-1627276962050000',8,24,6,7,1,'2021-08-24 16:20:47.119628','2021-08-24 16:27:27.696205');
INSERT INTO "notes_note" VALUES(54,'my-notebook-2021-08-24-1627074598770000',9,24,6,7,0,'2021-08-24 16:27:07.460880','2021-08-24 16:27:07.460880');
INSERT INTO "notes_note" VALUES(55,'my-notebook-2021-08-24-1629431767340000',11,15,6,1,1,'2021-08-24 16:29:07.434785','2021-08-24 16:29:43.176734');
INSERT INTO "notes_note" VALUES(56,'my-notebook-2021-08-24-1901175371860000',8,17,6,2,1,'2021-08-24 16:29:35.456556','2021-08-24 19:01:17.537186');
INSERT INTO "notes_note" VALUES(57,'my-notebook-2021-08-24-1630157167160000',7,13,6,3,1,'2021-08-24 16:30:09.838003','2021-08-24 16:30:15.716716');
INSERT INTO "notes_note" VALUES(58,'my-notebook-2021-08-24-1630439068790000',11,19,6,4,1,'2021-08-24 16:30:30.376774','2021-08-24 16:30:43.906879');
INSERT INTO "notes_note" VALUES(59,'my-notebook-2021-08-24-1910471094570000',9,17,6,2,0,'2021-08-24 19:10:47.109457','2021-08-24 19:10:47.109457');
INSERT INTO "notes_note" VALUES(60,'my-notebook-2021-08-24-1914297384520000',10,17,6,2,1,'2021-08-24 19:14:17.367191','2021-08-24 19:14:29.738452');
INSERT INTO "notes_note" VALUES(61,'python-programming-2021-08-25-0420354824630000',12,15,7,1,0,'2021-08-25 04:20:35.482463','2021-08-25 04:20:35.482463');
INSERT INTO "notes_note" VALUES(62,'python-programming-2021-08-25-0424006532580000',8,13,7,3,0,'2021-08-25 04:24:00.653258','2021-08-25 04:24:00.653258');
INSERT INTO "notes_note" VALUES(63,'python-programming-2021-08-25-0426244145640000',12,19,7,4,1,'2021-08-25 04:26:19.251464','2021-08-25 04:26:24.414564');
INSERT INTO "notes_note" VALUES(64,'python-programming-2021-08-25-0427305250630000',12,24,7,7,0,'2021-08-25 04:27:30.525063','2021-08-25 04:27:30.525063');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_notebook" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(200) NOT NULL, "slug" varchar(300) NULL UNIQUE, "user_id" bigint NOT NULL REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED, "discription" text NULL, "date_updated" datetime NOT NULL);
INSERT INTO "notes_notebook" VALUES(6,'My Notebook','my-notebook-2021-08-24-0550527335710000',1,'','2021-08-24 05:50:52.733571');
INSERT INTO "notes_notebook" VALUES(7,'Python Programming','python-programming-2021-08-25-0413171343230000',2,'','2021-08-25 04:13:17.134323');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_notetype" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "type_name" varchar(100) NOT NULL, "slug" varchar(300) NULL UNIQUE, "icon_class" varchar(50) NULL);
INSERT INTO "notes_notetype" VALUES(1,'Lecture Note','lecture-note','fas fa-book-open');
INSERT INTO "notes_notetype" VALUES(2,'Project Plan','project-plan','fas fa-project-diagram');
INSERT INTO "notes_notetype" VALUES(3,'Blank Note','blank-note','fas fa-sticky-note');
INSERT INTO "notes_notetype" VALUES(4,'Todo Note','todo-note','far fa-list-alt');
INSERT INTO "notes_notetype" VALUES(5,'Meeting Note','meeting-note','fas fa-handshake');
INSERT INTO "notes_notetype" VALUES(6,'Essay Outline','essay-outline','fas fa-file-alt');
INSERT INTO "notes_notetype" VALUES(7,'Meal Planner','meal-planner','fas fa-drumstick-bite');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_projectplan" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(300) NOT NULL, "summary" text NOT NULL, "major_milestones" text NOT NULL);
INSERT INTO "notes_projectplan" VALUES(7,'Project Plan','Project planning is part of project management, which relates to the use of schedules such as Gantt charts to plan and subsequently report progress within the project environment. Project planning can be done manually or by the use of project management software.','<ul>
	<li>Initiate</li>
	<li>Plan</li>
	<li>Execute</li>
	<li>Close</li>
</ul>

<p>&nbsp;</p>

<table border="1" class="table" style="border:1px solid #dddddd; height:270px; margin-top:20px; text-align:center; width:650px">
	<thead>
		<tr>
			<th>&nbsp;</th>
			<th>Week1<br />
			1/07/2021</th>
			<th>Week2<br />
			8/07/2021</th>
			<th>Week3<br />
			15/07/2021</th>
			<th>Week4<br />
			22/07/2021</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><strong>Task 1</strong></td>
			<td style="background-color:#66ccff">&nbsp;</td>
			<td style="background-color:#ffff66">&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 2</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td style="background-color:#ffcccc">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 3</strong></td>
			<td>&nbsp;</td>
			<td style="background-color:#ffff66">&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 4</strong></td>
			<td style="background-color:#66ccff">&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>');
INSERT INTO "notes_projectplan" VALUES(8,'E-Commerce project in Django + React','Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.Note-taking is the practice of recording information from different sources and platforms. By taking notes, the writer records the essence of the information, freeing their mind from having to recall everything.','<ul>
	<li>MileStone 1</li>
	<li>MileStone 2</li>
	<li>MileStone 3</li>
</ul>

<table border="1" class="table" style="border:1px solid #dddddd; height:270px; margin-top:20px; text-align:center; width:650px">
	<thead>
		<tr>
			<th>&nbsp;</th>
			<th>Week1<br />
			DD/MM/YY</th>
			<th>Week2<br />
			DD/MM/YY</th>
			<th>Week3<br />
			DD/MM/YY</th>
			<th>Week4<br />
			DD/MM/YY</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><strong>Task 1</strong></td>
			<td>start</td>
			<td>continue</td>
			<td>end</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 2</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 3</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 4</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>');
INSERT INTO "notes_projectplan" VALUES(9,'Project Plan','Milestones provide a way to more accurately estimate the time it will take to complete your project by marking important dates and events, making them essential for precise project planning and scheduling.','<ul>
	<li>Project approval</li>
	<li>Start and end of project phases</li>
	<li>Getting your project charter approved</li>
	<li>Securing financing, equipment or resources</li>
	<li>Completing critical tasks</li>
	<li>Project completion</li>
</ul>

<table border="1" class="table" style="border:1px solid #dddddd; height:270px; margin-top:20px; text-align:center; width:650px">
	<thead>
		<tr>
			<th>&nbsp;</th>
			<th>Week1<br />
			DD/MM/YY</th>
			<th>Week2<br />
			DD/MM/YY</th>
			<th>Week3<br />
			DD/MM/YY</th>
			<th>Week4<br />
			DD/MM/YY</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><strong>Task 1</strong></td>
			<td style="background-color:#66ccff">&nbsp;</td>
			<td style="background-color:#ffff66">&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 2</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td style="background-color:#ffcccc">&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 3</strong></td>
			<td style="background-color:#66ccff">&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td style="background-color:#99cccc">&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 4</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>');
INSERT INTO "notes_projectplan" VALUES(10,'Classification','Milestones provide a way to more accurately estimate the time it will take to complete your project by marking important dates and events, making them essential for precise project planning and scheduling','<ul>
	<li>MileStone 1</li>
	<li>MileStone 2</li>
	<li>MileStone 3</li>
</ul>

<table class="table" style="height:270px; margin-top:20px; text-align:center; width:650px">
	<thead>
		<tr>
			<th>&nbsp;</th>
			<th>Week1<br />
			DD/MM/YY</th>
			<th>Week2<br />
			DD/MM/YY</th>
			<th>Week3<br />
			DD/MM/YY</th>
			<th>Week4<br />
			DD/MM/YY</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td><strong>Task 1</strong></td>
			<td>st</td>
			<td>cn</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 2</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 3</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td><strong>Task 4</strong></td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
			<td>&nbsp;</td>
		</tr>
	</tbody>
</table>');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_sharednote" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "date_shared" datetime NOT NULL, "note_id" bigint NOT NULL REFERENCES "notes_note" ("id") DEFERRABLE INITIALLY DEFERRED, "receiver_id" bigint NOT NULL REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED, "sender_id" bigint NOT NULL REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO "notes_sharednote" VALUES(2,'2021-08-25 04:42:06.668493',61,1,2);
INSERT INTO "notes_sharednote" VALUES(3,'2021-08-25 04:45:56.995896',62,1,2);
INSERT INTO "notes_sharednote" VALUES(4,'2021-08-25 04:46:34.307833',62,2,2);
INSERT INTO "notes_sharednote" VALUES(5,'2021-08-25 04:48:54.658151',64,1,2);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_stickynote" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "text" text NOT NULL, "date_created" datetime NOT NULL, "date_updated" datetime NOT NULL, "user_id" bigint NOT NULL REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED, "slug" varchar(200) NULL UNIQUE);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_todoitem" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "item" varchar(300) NOT NULL, "completed" bool NOT NULL, "todo_id" bigint NOT NULL REFERENCES "notes_todonote" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO "notes_todoitem" VALUES(78,'To continue learning javascript',1,10);
INSERT INTO "notes_todoitem" VALUES(79,'To continue learning Material CSS',0,10);
INSERT INTO "notes_todoitem" VALUES(80,'Apply for job as a web developer',0,10);
INSERT INTO "notes_todoitem" VALUES(81,'Apply for job in One-Byte company',0,10);
INSERT INTO "notes_todoitem" VALUES(82,'E-Commerce Shopping website',0,10);
INSERT INTO "notes_todoitem" VALUES(83,'Interview preparation for Online jobs',1,10);
INSERT INTO "notes_todoitem" VALUES(84,'Continue learning React',0,11);
INSERT INTO "notes_todoitem" VALUES(85,'Continue learning React',1,11);
INSERT INTO "notes_todoitem" VALUES(86,'Continue learning React',0,11);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_todonote" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(300) NOT NULL);
INSERT INTO "notes_todonote" VALUES(1,'Topics to learn this week');
INSERT INTO "notes_todonote" VALUES(10,'Topics to cover after Defense');
INSERT INTO "notes_todonote" VALUES(11,'Todo note');
INSERT INTO "notes_todonote" VALUES(12,'Defence Prepration');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "notes_trash" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "note_id" bigint NOT NULL REFERENCES "notes_note" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO "notes_trash" VALUES(45,45);
INSERT INTO "notes_trash" VALUES(46,43);
INSERT INTO "notes_trash" VALUES(48,51);
INSERT INTO "notes_trash" VALUES(49,53);
INSERT INTO "notes_trash" VALUES(51,55);
INSERT INTO "notes_trash" VALUES(52,57);
INSERT INTO "notes_trash" VALUES(53,58);
INSERT INTO "notes_trash" VALUES(54,46);
INSERT INTO "notes_trash" VALUES(55,56);
INSERT INTO "notes_trash" VALUES(56,60);
INSERT INTO "notes_trash" VALUES(57,63);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "socialaccount_socialaccount" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "uid" varchar(191) NOT NULL, "last_login" datetime NOT NULL, "date_joined" datetime NOT NULL, "extra_data" text NOT NULL, "user_id" bigint NOT NULL REFERENCES "accounts_account" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO "socialaccount_socialaccount" VALUES(1,'google','113537744878348789736','2021-08-11 05:01:46.204939','2021-06-08 04:29:38.829907','{"id": "113537744878348789736", "name": "Namrah Raheem", "given_name": "Namrah", "family_name": "Raheem", "picture": "https://lh3.googleusercontent.com/a-/AOh14GgGb4Wtg9-_D8HcTZ12Q0b5iaVzan39H34PL-Lxxg=s96-c", "locale": "en-GB"}',3);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "socialaccount_socialapp" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "provider" varchar(30) NOT NULL, "name" varchar(40) NOT NULL, "client_id" varchar(191) NOT NULL, "secret" varchar(191) NOT NULL, "key" varchar(191) NOT NULL);
INSERT INTO "socialaccount_socialapp" VALUES(1,'google','Super Notes','580146698319-k6mu580ghucuq6ednf4faio7ek61k06l.apps.googleusercontent.com','tRgkqKmGBMxob4x_aVXmA8_Z','');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "socialaccount_socialapp_sites" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "socialapp_id" integer NOT NULL REFERENCES "socialaccount_socialapp" ("id") DEFERRABLE INITIALLY DEFERRED, "site_id" integer NOT NULL REFERENCES "django_site" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO "socialaccount_socialapp_sites" VALUES(1,1,1);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "socialaccount_socialtoken" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "token" text NOT NULL, "token_secret" text NOT NULL, "expires_at" datetime NULL, "account_id" bigint NOT NULL REFERENCES "socialaccount_socialaccount" ("id") DEFERRABLE INITIALLY DEFERRED, "app_id" bigint NOT NULL REFERENCES "socialaccount_socialapp" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO "socialaccount_socialtoken" VALUES(1,'ya29.a0ARrdaM-Df8mHbIoATk46khxncyGWe4hLrUAHQuR85an7uAlDZu3mmpm3nLOz0AgAOtAcEpfs_sxG7nOxJ5ZYboRIugkf1iTumBedLxZttccKOOfim-I00zTP_hln4L2PVzfJzWpRF2UGGmotm85SzLUq9LQL','','2021-08-11 06:01:44.561620',1,1);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "taggit_tag" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE, "slug" varchar(100) NOT NULL UNIQUE);
INSERT INTO "taggit_tag" VALUES(1,'reading','reading');
INSERT INTO "taggit_tag" VALUES(2,'books','books');
INSERT INTO "taggit_tag" VALUES(3,'love','love');
INSERT INTO "taggit_tag" VALUES(4,'songs','songs');
INSERT INTO "taggit_tag" VALUES(5,'notes','notes');
INSERT INTO "taggit_tag" VALUES(6,'news','news');
INSERT INTO "taggit_tag" VALUES(7,'flexnote','flexnote');
INSERT INTO "taggit_tag" VALUES(8,'tech','tech');
INSERT INTO "taggit_tag" VALUES(9,'space','space');
INSERT INTO "taggit_tag" VALUES(10,'habits','habits');
INSERT INTO "taggit_tag" VALUES(11,'journey','journey');
INSERT INTO "taggit_tag" VALUES(12,'mental health','mental-health');
INSERT INTO "taggit_tag" VALUES(13,'everything','everything');
INSERT INTO "taggit_tag" VALUES(14,'life','life');
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
CREATE TABLE IF NOT EXISTS "taggit_taggeditem" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" integer NOT NULL, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "tag_id" integer NOT NULL REFERENCES "taggit_tag" ("id") DEFERRABLE INITIALLY DEFERRED);
INSERT INTO "taggit_taggeditem" VALUES(1,1,31,1);
INSERT INTO "taggit_taggeditem" VALUES(2,1,31,2);
INSERT INTO "taggit_taggeditem" VALUES(5,3,31,1);
INSERT INTO "taggit_taggeditem" VALUES(6,3,31,2);
INSERT INTO "taggit_taggeditem" VALUES(7,4,31,5);
INSERT INTO "taggit_taggeditem" VALUES(8,4,31,6);
INSERT INTO "taggit_taggeditem" VALUES(9,5,31,5);
INSERT INTO "taggit_taggeditem" VALUES(10,5,31,6);
INSERT INTO "taggit_taggeditem" VALUES(11,6,31,5);
INSERT INTO "taggit_taggeditem" VALUES(12,6,31,7);
INSERT INTO "taggit_taggeditem" VALUES(13,7,31,8);
INSERT INTO "taggit_taggeditem" VALUES(14,7,31,5);
INSERT INTO "taggit_taggeditem" VALUES(15,7,31,7);
INSERT INTO "taggit_taggeditem" VALUES(16,8,31,9);
INSERT INTO "taggit_taggeditem" VALUES(17,8,31,5);
INSERT INTO "taggit_taggeditem" VALUES(18,8,31,7);
INSERT INTO "taggit_taggeditem" VALUES(19,9,31,10);
INSERT INTO "taggit_taggeditem" VALUES(20,9,31,7);
INSERT INTO "taggit_taggeditem" VALUES(21,10,31,11);
INSERT INTO "taggit_taggeditem" VALUES(22,10,31,12);
INSERT INTO "taggit_taggeditem" VALUES(23,10,31,7);
INSERT INTO "taggit_taggeditem" VALUES(24,11,31,13);
INSERT INTO "taggit_taggeditem" VALUES(25,11,31,14);
CREATE INDEX IF NOT EXISTS "account_emailaddress_user_id_2c513194" ON "account_emailaddress" ("user_id");
CREATE INDEX IF NOT EXISTS "account_emailconfirmation_email_address_id_5b7f8c58" ON "account_emailconfirmation" ("email_address_id");
CREATE UNIQUE INDEX "accounts_account_groups_account_id_group_id_f64165b0_uniq" ON "accounts_account_groups" ("account_id", "group_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_account_id_52f14852" ON "accounts_account_groups" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_groups_group_id_7c6a6bd1" ON "accounts_account_groups" ("group_id");
CREATE UNIQUE INDEX "accounts_account_user_permissions_account_id_permission_id_9af93c14_uniq" ON "accounts_account_user_permissions" ("account_id", "permission_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_account_id_816f9bde" ON "accounts_account_user_permissions" ("account_id");
CREATE INDEX IF NOT EXISTS "accounts_account_user_permissions_permission_id_24620205" ON "accounts_account_user_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX IF NOT EXISTS "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX IF NOT EXISTS "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX IF NOT EXISTS "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE INDEX IF NOT EXISTS "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX IF NOT EXISTS "notes_daymeal_mealplanner_id_75cdd1c0" ON "notes_daymeal" ("mealplanner_id");
CREATE INDEX IF NOT EXISTS "notes_note_content_type_id_a9c3ba4a" ON "notes_note" ("content_type_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_book_id_22444aed" ON "notes_note" ("note_book_id");
CREATE INDEX IF NOT EXISTS "notes_note_note_type_id_5b313db1" ON "notes_note" ("note_type_id");
CREATE INDEX IF NOT EXISTS "notes_stickynote_user_id_6284863e" ON "notes_stickynote" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_todoitem_todo_id_64eeb99c" ON "notes_todoitem" ("todo_id");
CREATE INDEX IF NOT EXISTS "notes_trash_note_id_2a10e6f4" ON "notes_trash" ("note_id");
CREATE UNIQUE INDEX "socialaccount_socialaccount_provider_uid_fc810c6e_uniq" ON "socialaccount_socialaccount" ("provider", "uid");
CREATE INDEX IF NOT EXISTS "socialaccount_socialaccount_user_id_8146e70c" ON "socialaccount_socialaccount" ("user_id");
CREATE UNIQUE INDEX "socialaccount_socialapp_sites_socialapp_id_site_id_71a9a768_uniq" ON "socialaccount_socialapp_sites" ("socialapp_id", "site_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_socialapp_id_97fb6e7d" ON "socialaccount_socialapp_sites" ("socialapp_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialapp_sites_site_id_2579dee5" ON "socialaccount_socialapp_sites" ("site_id");
CREATE UNIQUE INDEX "socialaccount_socialtoken_app_id_account_id_fca4e0ac_uniq" ON "socialaccount_socialtoken" ("app_id", "account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_account_id_951f210e" ON "socialaccount_socialtoken" ("account_id");
CREATE INDEX IF NOT EXISTS "socialaccount_socialtoken_app_id_636a42d7" ON "socialaccount_socialtoken" ("app_id");
CREATE INDEX IF NOT EXISTS "notes_diarypage_diary_id_1dfb0b8f" ON "notes_diarypage" ("diary_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_object_id_e2d7d1df" ON "taggit_taggeditem" ("object_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_9957a03c" ON "taggit_taggeditem" ("content_type_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_tag_id_f4f5b767" ON "taggit_taggeditem" ("tag_id");
CREATE INDEX IF NOT EXISTS "taggit_taggeditem_content_type_id_object_id_196cc965_idx" ON "taggit_taggeditem" ("content_type_id", "object_id");
CREATE UNIQUE INDEX "taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uniq" ON "taggit_taggeditem" ("content_type_id", "object_id", "tag_id");
CREATE INDEX IF NOT EXISTS "notes_notebook_user_id_9415769f" ON "notes_notebook" ("user_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_note_id_02e049e0" ON "notes_sharednote" ("note_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_receiver_id_ac4fdfa4" ON "notes_sharednote" ("receiver_id");
CREATE INDEX IF NOT EXISTS "notes_sharednote_sender_id_0057375c" ON "notes_sharednote" ("sender_id");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_48865653" ON "django_cron_cronjoblog" ("code");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_start_time_d68c0dd9" ON "django_cron_cronjoblog" ("start_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_end_time_7918602a" ON "django_cron_cronjoblog" ("end_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_ran_at_time_7fed2751" ON "django_cron_cronjoblog" ("ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_ran_at_time_8b50b8fa_idx" ON "django_cron_cronjoblog" ("code", "start_time", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_is_success_ran_at_time_84da9606_idx" ON "django_cron_cronjoblog" ("code", "is_success", "ran_at_time");
CREATE INDEX IF NOT EXISTS "django_cron_cronjoblog_code_start_time_4fc78f9d_idx" ON "django_cron_cronjoblog" ("code", "start_time");
CREATE INDEX IF NOT EXISTS "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX IF NOT EXISTS "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
